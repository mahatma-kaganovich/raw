## /etc/kernels/kernel.conf

# 1 to enable some autodetect on x86 (not first "build-kernel")
DETECT=0

## Use uclibc to build smaller initrd
## first do 'crossdev ${ARCH}-pc-linux-uclibc --stage3'
#CTARGET="${CTARGET/-pc-linux-gnu/-pc-linux-uclibc}"

CF(){
	KERNEL_CONFIG="${KERNEL_CONFIG} $*"
}

CPUFLAG(){
	grep "^flags" /proc/cpuinfo | grep -Pq "\s$1[\s\n]"
	return $?
}

#KERNEL_IMAGE_FILES="/bin/mount"

# embed default cmdline
CF CMDLINE_BOOL
# yet another way to configure (KERNEL_CONFIG_*)
KERNEL_CONFIG_CMDLINE="\"root=/dev/ram0 init=/linuxrc ramdisk=8192 detect_root vga=0x0f04 quiet\""

## ignore errors in modules. may be dangerous
## exclude "stable" branch to avoid system death
[[ "${PN}" != gentoo-* ]] &&  KERNEL_MODULES_MAKEOPT="-i"

## remove grouping and namespaces, simple role server/desctop
#CF -GROUP_SCHED -CGROUPS -USER_NS -PID_NS -NET_NS
## force >4G RAM & usage on x86_32 (pae required)
#CF HIGHMEM64G HIGHPTE
## <=1G
#CF NOHIGHMEM
## x86_32 faster, no xen, <=4G
#CF -X86_PAE
## may be fatal for ocfs2/drbd
#CF IOSCHED_CFQ DEFAULT_CFQ
## application server: 100HZ
CF HZ_100
## top preemption/sensitive
#CF "-PREEMPT_NONE PREEMPT .*PREEMPT_RCU"
## desktop
#CF -PREEMPT_NONE PREEMPT_VOLUNTARY
## speedup desktop build
#CF "-.*PCMCIA.* -MCA -EISA"
## remove old IDE (concurrent with ATA)
#CF -IDE
## extensions
CF NETFILTER_XT_MATCH_CONNLIMIT_ACTIVE NETFILTER_XT_TARGET_NOTRACK_NEW NET_SCH_PSP_PKT_GAP NET_SCH_INGRESS_TC2MARK
## I use (PSPacer hard dependend clocks)
CF NET_SCH_PSP_HARDCHAIN

## additional CFLAGS may be placed here
#KERNEL_CFLAGS="-mtune=native"

## for useflag "custom-arch", very experimental
#KERNEL_CFLAGS="-march=native"

## user-mode
#KERNEL_ARCH="um"
#CF 64BIT
#CF MK8
#CF MCORE2

##################autodetect
CF=""
if [[ "${DETECT}" == "1" ]] ; then
	# SMP
	CF1 -SMP -X86_BIGSMP
	cpus=`cat /sys/devices/system/cpu/present`
	cpus=${cpus#*-}
	: ${cpus:=0}
	[[ "${cpus}" -gt 0 ]] && CF1 SMP
	[[ "${cpus}" -gt 7 ]] && CF1 X86_BIGSMP
	[[ "${cpus}" -gt 511 ]] && CF1 MAXSMP
	let cpus=cpus+1 && CF1 NR_CPUS=${cpus}
	# ioatdma
	( lsmod|grep -q "^ioatdma" ) || CF1 -NET_DMA -ASYNC_TX_DMA
	CF ${CF}
fi
