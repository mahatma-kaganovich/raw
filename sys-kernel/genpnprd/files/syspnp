#!/bin/sh
## pnp modules bootloader
## (c) Denis Kaganovich, under Anarchy license
## consume preprocessed /lib/modules/$KV/modules.alias

PARA=0
[[ -z "$TMPDIR" ]] && [[ -e /temp ]] && TMPDIR="/temp"
PNP_TMP="${TMPDIR}/pnp.found"
NOTLOADED=""
[[ -z "$KV" ]] && KV=`uname -r`
NOFB=false
NOPNP=false
QUIET=false
MODUNLOAD=false

single(){
	grep -q "^$1\$" "${PNP_TMP}.$2" && return 1
	echo "$1" >>"${PNP_TMP}.$2"
	return 0
}

mod1(){
	local m m1 m2
	for m in $* ; do
		single "$m" 0 || continue
		alias2 "$m"
		for m1 in $ALIAS ; do
			m2="${m1##*/}"
			m2="${m2%.??}"
			[[ "$m" == "$m2" ]] || single "$m2" 0 || continue
			insmod "/lib/modules/$KV/$m1" >/dev/null 2>&1
		done
	done
}

mod(){
	if [[ "$PARA" == "0" ]]  ; then
		mod1 $*
	else
		if [[ $npid == $PARA ]]; then
		    wait ${pid%% *}
		    pid="${pid#* }"
		fi
		mod1 $* &
		pid="$pid$! "
		npid=$[npid+1]
	fi
}

refresh(){
	local i j l
	for i in $pid ; do
		wait $i
	done
	pid=""
	npid=0
	l="${BOLD}   ::${NORMAL}Loaded:"
	while read i j; do
		single "$i" 1 || continue
		[[ "$1" == "n" ]] && echo "$i" >>/nopnp.lst
		$QUIET || echo -ne "$l $i"
		l=""
	done </proc/modules
	cat "${PNP_TMP}".1 >"${PNP_TMP}".0
	[[ -z "$l" ]] || return 1
	$QUIET || echo ""
	return 0
}

load_aliases(){
	local i m
	while true; do
		for i in `find /sys -name modalias -print` ; do
			if [[ -e "$i" ]] && read m <"$i" ; then
				mod $m
			fi
		done
		refresh || break
	done
}

mod_unload(){
	local i l
	l=""
	( $MODUNLOAD && [[ -n "$REAL_ROOT" ]] && [[ -e "/nopnp.lst" ]] ) || return
	echo -n "(removing unlocked modules)"
	while read i; do
		l="$i $l"
	done </nopnp.lst
	rmmod $l >/dev/null 2>&1
}

pnp_options(){
	local i
	for i in `cat /proc/cmdline` ; do
	case "$i" in
	quiet) good_msg "PNP: quiet mode"; eval 'good_msg(){ return; }'; QUIET=true ;;
	nofb) NOFB=true ;;
	nopnp) NOPNP=true ;;
	unload) MODUNLOAD=true ;;
	esac
	done
}

ifmod(){
	local i
	for i in $* ; do
		grep -q "^${i}$" "${PNP_TMP}".0 || return 1
	done
	return 0
}

syspnp(){
	[[ -e "/lib/modules/${KV}/modules.alias.sh" ]] || return
	pnp_options
	$NOPNP && return
	local i i1
	[[ "$PARA" == "0" ]] || good_msg " -= Parallel PNP module loader =-"
	good_msg "Searching pnp"
	for i in 0 1 ; do
		echo -n "" >"${PNP_TMP}.$i"
	done
	pid=""
	npid=0
	refresh n
	. "/lib/modules/${KV}/modules.alias.sh"

	if [[ -n "$MDOLIST" ]]; then
		mod $MDOLIST
		refresh
	fi
	single usb-storage 0
	load_aliases
	$NOFB || mod fbcon
	ifmod usbcore && mod usb_storage # user-frendly
#	ifmod usual_tables && mod usb_storage # on demand
	refresh
	good_msg "Filtering pnp modules"
	while true; do
		# NODETECT: old behaviour
		[[ "${NODETECT}" != '1' ]] && for i1 in ${MY_HWOPTS} ; do
			[[ -e "/etc/modules/$i1" ]] && for i in `cat /etc/modules/${i1}` ; do
				grep -q "^${i}\$" "/lib/modules/$KV/modules.pnp" && continue
				mod "$i"
			done
		done
		refresh n || break
		# minimal
		[[ -n "$SDELAY" ]] && sleep "$SDELAY"
		mod $MDOLIST
		load_aliases
	done
	MY_HWOPTS=""
	MDOLIST=""

	if [[ -n "${NOTLOADED}" ]] ; then
		good_msg "Not loaded:$NOTLOADED"
		# try again
		MDOLIST="$NOTLOADED"
	fi
	rm "${PNP_TMP}".?
}

[[ "$1" == "init" ]] && syspnp $* # debug
