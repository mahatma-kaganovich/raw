CFLAGS="$CFLAGS -fno-ident -fexcess-precision=fast -fomit-frame-pointer -fivopts -fbranch-target-load-optimize"
CFLAGS="$CFLAGS -finline-small-functions -findirect-inlining"
CFLAGS="$CFLAGS -ffast-math"
# ?
#CFLAGS="$CFLAGS -fgcse-sm -fgcse-las"
# O2, but sometimes no
CFLAGS="$CFLAGS -fsched-pressure --param=sched-pressure-algorithm=2 -fschedule-insns -fschedule-insns2 -fsched-spec-load"
# O3
CFLAGS="$CFLAGS -fgcse-after-reload -fipa-cp-clone -fpredictive-commoning -ftree-loop-distribute-patterns -funswitch-loops -ftree-vectorize"
# O3 4.8
CFLAGS="$CFLAGS -fvect-cost-model -ftree-partial-pre"
# 4.9
#CFLAGS="$CFLAGS -fno-var-tracking-assignments"
CFLAGS="$CFLAGS -fdevirtualize-speculatively"

# looks like help other optimizers, but too increase code size
#CFLAGS="$CFLAGS -ftracer"

# modulo
CFLAGS="$CFLAGS -fmodulo-sched -fmodulo-sched-allow-regmoves -freschedule-modulo-scheduled-loops"

#CFLAGS="$CFLAGS -fno-stack-protector"

# 5 "improve code quality"? to grok
#CFLAGS="$CFLAGS -fno-semantic-interposition"

LDFLAGS="$LDFLAGS -Wl,--no-keep-memory -Wl,--reduce-memory-overheads"

CPPFLAGS="-pipe"
FFLAGS="$CFLAGS"
FCFLAGS="$CFLAGS"
CXXFLAGS="$CFLAGS"
CXXFLAGS="$CXXFLAGS -fvisibility-inlines-hidden"
