#!/bin/bash
# starting minimal openbox+desktop session
# wm is not reloadable
# startup is compromise pure openbox & some accessibility

wm=/usr/bin/openbox
Desk=/usr/share/ya-layout/Desktop
obconf="$HOME/.config/ya/rc.xml"
cache="$HOME/.cache/ya"
pidfile="$cache/running.pids"
envcache="$cache/env"
sm='--sm-disable'
sm2='--sm-client-disable'
safepids=true

# todo: full apps list
: ${YA_APP_XF86WWW:="'exo-open --launch WebBrowser' 'seamonkey --browser' firefox chromium midori @WebBrowser"}
: ${YA_APP_XF86Mail:="'exo-open --launch MailReader' 'seamonkey --mail' claws-mail thunderbird @Email"}
: ${YA_APP_TerminalEmulator:="'exo-open --launch TerminalEmulator' Terminal lxterminal \"gnome-terminal \$sm2\" kterm xterm @TerminalEmulator"}
: ${YA_APP_FileManager:="'exo-open --launch FileManager' \"pcmanfm -p \$YA_PROFILE\" Thunar \"nautilus --no-desktop \$sm2\" @FileManager +mc"}
: ${YA_APP_XF86AudioMedia:="audacious aqualung vlc mplayer '@Player;Audio|Player;AudioVideo;!Video' '@Player;AudioVideo'"}
: ${YA_APP_XF86VideoMedia:="mplayer2 mplayer vlc '@Player;Video|Player;AudioVideo;!Audio' '@Player;AudioVideo'"}
: ${YA_APP_XF86Calendar:="orage"}
: ${YA_APP_XF86Calculator="gpe-calculator"}
: ${YA_APP_XF86Messenger="pidgin @InstantMessaging"}
#
: ${YA_APP_XF86SettingsManager:="'xfsettingsd -d' xfce-mcs-manager gnome-settings-daemon /usr/libexec/gnome-settings-daemon"}
: ${YA_APP_XF86Panel:="\"xfce4-panel \$sm2\" \"lxpanel -p \$YA_PROFILE\"" \"gnome-panel \$sm2\"}
: ${YA_APP_XF86Desktop:="\"pcmanfm --desktop -p \$YA_PROFILE\" \"xfdesktop \$sm2\" \"nautilus -n \$sm2\""}

# 2run
: ${YA_SESSION:="XF86SettingsManager XF86Panel XF86Desktop"}

: ${YA_PROFILE:=ya}
# preferred: append to $YA_APP
: ${YA_PROFILE_LXDE:="pcmanfm lxpanel lxterminal"}
: ${YA_PROFILE_xfce:="xfdesktop xfce4-panel exo-open"}
: ${YA_PROFILE_gnome:="nautilus gnome-panel gnome-terminal"}

: ${YA_XDG_AUTOSTART:="$YA_PROFILE"}

# startup: minimal
: ${YA_STARTUP:=XF86Desktop}

pid_ok(){
	[ -d /proc/$1 ] && ( ! $safepids || ! [ -e "$cache/PIDS/$1" ] || grep -qf "$cache/PIDS/$1" /proc/$1/cmdline )
	return $?
}

_exit(){
	for i in $pids; do
		pid_ok $i && echo $i
	done >"$pidfile"
	flock -u 9
}

err(){
	echo "ERROR: ${@}"
	_exit
	exit 1
}

_exec(){
	_exit
	exec "${@}"
}

1of(){
	local i x p
	for i in "${@}"; do
		x=`which "${i%% *}" 2>/dev/null` || continue
		p="${i#* }"
		[ "$p" = "$i" ] && echo "$x" || echo "$x $p"
		return 0
	done
	return 1
}

1cfg(){
	local i
	for i in "$HOME"/.config/$1 /etc/xdg/$1; do
		[ -r "$i" ] && echo "$i" && return 0
	done
	return 1
}

wm(){
	if [ "$1" = --startup -a "$wm" != /usr/bin/openbox ]; then
		shift
		_run $*
		wm
	fi
	_exec $wm $sm --config-file "$obconf" "${@}"
}

envir(){
	local A
	A=`1cfg "$1/environment"` && [ -r "$A" ] && . "$A"
}

obconfig(){
	mkdir -p "${1%/*}"
	sed -e 's:<animateIconify>yes</animateIconify>:<animateIconify>no</animateIconify>:' \
		-e 's:<file>menu\.xml</file>:<file>../ya/menu.xml</file>\n<showIcons>yes</showIcons>:' \
		-e 's:<name>Clearlooks</name>:<name>Onyx</name>:' \
		-e 's:</keyboard>:\
		<keybind key="Menu"><action name="ShowMenu"><menu>root-menu</menu></action></keybind>\
		<keybind key="C-Menu"><action name="Execute"><command>ya-session --run +/usr/bin/sudo /usr/bin/mc</command></action></keybind>\
		<keybind key="Super_L"><action name="Execute"><command>ya-session --run TerminalEmulator</command></action></keybind>\
		<keybind key="Super_R"><action name="Execute"><command>ya-session --run TerminalEmulator</command></action></keybind>\
		<keybind key="C-Super_L"><action name="Execute"><command>ya-session --run +/usr/bin/sudo -s</command></action></keybind>\
		<keybind key="C-Super_R"><action name="Execute"><command>ya-session --run +/usr/bin/sudo -s</command></action></keybind>\
		<keybind key="XF86Calculator"><action name="Execute"><command>ya-session --run XF86Calculator</command></action></keybind>\
		<keybind key="XF86WWW"><action name="Execute"><command>ya-session --run XF86WWW</command></action></keybind>\
		<keybind key="XF86Mail"><action name="Execute"><command>ya-session --run XF86Mail</command></action></keybind>\
		<keybind key="XF86AudioMedia"><action name="Execute"><command>ya-session --run XF86AudioMedia</command></action></keybind>\
		<keybind key="XF86MyComputer"><action name="Execute"><command>ya-session --run "FileManager $HOME/Desktop"</command></action></keybind>\
		<keybind key="XF86Messenger"><action name="Execute"><command>ya-session --run XF86Messenger</command></action></keybind>\
		<keybind key="XF86Eject"><action name="Execute"><command>eject /dev/sr0</command></action></keybind>\
		</keyboard>:' \
			<"$2" >"$1"
}

_kill(){
	local i l
	for i in "${@}"; do
		i="${i%% *}"
		case "$l" in
		pcmanfm)pcmanfm --desktop-off;;
		xfdesktop)xfdesktop --quit;;
		lxpanel)lxpanelctl exit;;
		*)l+=" $i";;
		esac
	done
	killall $l
}

killer2(){
	local k i p
	for k in kill false false false 'kill -s KILL' false; do
		p=""
		for i in $pids; do
			if pid_ok $i ; then
				$k $i
				p="$p $i"
			fi
		done
		pids="$p"
		[ -z "$p" ] && return
		sleep 1
		echo -n "[wait]"
	done
	return 1
}

#killer2(){
#	kill $pids
#	wait $pids
#	pids=''
#}

killer(){
	pcmanfm --desktop-off
	xfdesktop --quit
	lxpanelctl exit
	[ -n "$pids" ] && killer2
	killall -w xfce-mcs-manager gnome-settings-daemon
}

_run(){
	local i
	"${@}" &
	i=$?
	case "$*" in
	*/xfdesktop\ *|*/pcmanfm\ --desktop*|*/lxpanel\ *)return $i;;
	esac
	pids+=" $!"
	$safepids && echo "${*// /.}" >"$cache/PIDS/$!"
	return $i
}

runs(){
	local i
	i=`1of "${@}"` && _run $i
}

run(){
	local i
	for i in "${@}"; do
		i=`app $i` && _run $i
	done
}

envcache(){
	local i
	for i in "${@}"; do
		sed -i -e "/^$i=/d" "$envcache"
		echo "$i='${!i}'" >>"$envcache"
	done
}

by_category(){
local i
for i in ${*//|/ }; do
	local y= n=
	for i in ${i//;/ }; do
		[ -n "${i##!*}" ] && y+="$i\|" || n+="${i#!}\|"
	done
	eval "grep -R '^Categories=${y:+\(\|.*;\)\(${y%??}\)\(;\|$\)}' /usr/share/applications --include '*.desktop'${n:+|grep -v '[=;]\(${n%??}\)\(;\|$\)'}"
done|sort -u|while read i; do
	local Exec= TryExec= Terminal= Type=
	while read i; do
		case "$i" in
		Exec=*|TryExec=*|Terminal=*|Type=*)local "${i%%=*}"="${i#*=}";;
		esac
	done <"${i%%:*}"
	if [ -n "$Exec" -a "$Type" = Application ] && ([ -z "$TryExec" ] || which "$TryExec" >/dev/null 2>&1); then
		[ "$Terminal" = true ] && Exec="+$Exec"
		echo -n "'${Exec% \%?}' "
	fi
done
}

_app(){
	local p="$1" x p1
	shift
	for i in "${@}"; do
		x="${i%% *}"
		[ "$x" = "$i" ] && p1="$p" || p1=" ${i#* }$p"
		pref="${x:0:1}"
		x="${x#[+@]}"
		case "$pref" in
		@)
			# categories are slow, last resort
			[ -n "$min" ] && continue
			eval "_app '$p1' $(by_category "$x")"
			continue
		;;
		esac
		v="YA_APP_${x//-/_}"
		if [ -n "${!v}" ]; then
			eval "_app '$p1' ${!v}"
			continue
		fi
#		which "$x" >/dev/null 2>&1 || continue
		x=`which "$x" 2>/dev/null` || continue
		a="$aa"
		a="${a%% $x *}"
		a="${a%% ${x##*/} *}"
#		[ $a ] || return
		a="${#a}"
		[ $a -lt $mina ] || continue
		mina=$a
		min="$x$p1"
		minpref="$pref"
	done
}

# select one preferred app
# $YA_APP - global preferred list
# $YA_APP_<name> - substitution list for "name"
# +command - in term
app(){
	local i v a aa min= mina pref minpref=
	v="YA_PROFILE_$YA_PROFILE"
	aa=" $YA_APP ${!v} "
	mina=$((${#aa}+1))
	for i in "${@}"; do
		eval "_app '' '$i'"
	done
	[ -z "$min" ] && return 1
	case "$minpref" in
	+)app "TerminalEmulator -e $min";;
	*)echo "$min";;
	esac
	return
}

launch(){
	i="$(app "${@}")"
	case "$i" in
	*exo-open\ --launch\ TerminalEmulator\ -e\ *)i="${i/ -e}";;
	esac
	exec $i
	exit
}

ob3menu-cache(){
	. /usr/bin/ob3menu-cache
}

sess(){
	export XDG_MENU_PREFIX="${YA_PROFILE,,}-" DESKTOP_SESSION="ya"
	# SESSION_MANAGER=
}

[ -r "$envcache" ] && . "$envcache"
[ -e "$pidfile.l" ] || mkdir -p "${pidfile%/*}/PIDS"
{
flock -w 10 -x 9 || {
	echo "error locking $pidfile"
	exit
}
[ -z "$YA_DESKTOP" ] && YA_DESKTOP=`app $YA_STARTUP`
desk="$YA_DESKTOP"
pids=`cat "$pidfile" 2>/dev/null`
sess
while true; do
case "$1" in
--noop)break;;
--exit)_exec killall xinit X $wm ;;
--ya)
	killer
	sess
	i="YA_SESSION_$YA_PROFILE"
	i="${!i}"
	eval "run ${i:-$YA_SESSION}"
	while read i; do
		_run ${i% &}
	done <"$cache/autostart"
;;
--kill)
	i="YA_APP_$2"
	[ -z "${!i}" ] && i="$2" || i="${!i}"
	eval "_kill $i"
	break
;;
--0)
	killer
	_run $desk
;;
--layout)
	desk(){
		cd "$1" || ( mkdir "$1" && cd "$1" ) || err "~/Desktop"
	}
	eval "desk ~${2:-$USER}/Desktop"
	for i in /mnt/auto/disk $Desk/*; do
		[ -n "${i##*/.*}" -a -e "$i" -a -e "${i##*/}" ] || ln -s "$i"
	done
	break
;;
--obsession)
	shift
	envir openbox
	i='/usr/libexec/openbox-autostart OPENBOX'
	[ -z "$desk" ] && desk="$i" || desk="/bin/bash -c '$i;_exec $desk'"
	continue
;;
--open)
	shift
	desk=`app FileManager` && for i in $Desk $HOME/Desktop; do
		[ -d "$i" ] && desk="$desk $i"
	done
	continue
;;
-p|--profile)
	YA_PROFILE="$2"
	envcache YA_PROFILE
	YA_DESKTOP=`app $YA_STARTUP`
	desk="$YA_DESKTOP"
	shift 2
	continue
;;
--run)shift;launch "$*";; # better for param chaining
--runs)shift;launch "${@}";;
--obconfig)
	shift
	obconfig "${@}"
	break
;;
--env)
	echo "$2" >>"$envcache" && . "$envcache"
	shift 2
	continue
;;
?*)
	i=" ${!YA_APP_*}"
	i="${i// YA_APP_/,}"
	i="${i#,}"
	echo "Usage: ya-session [command]
Commands: -noop, --ya, -p|--profile <profile>, --exit, --0, --obsession, --open,
	--layout [user], --run <cmd>, --runs 'cmd1' ['cmd2'...]
.xinitrc examples:
	minimal: exec ya-session'
	openbox-style: exec ya-session --open --obsession
	panel: YA_STARTUP=XF86Panel exec ya-session
	xfce4 panel: YA_PROFILE=xfce YA_STARTUP=XF86Panel exec ya-session
One-shot desktop update: ya-session --layout
or: ln -s $Desk ~/Desktop/desktop
Launcher:
	ya-session --run cmd
	ya-session --runs 'cmd1' 'cmd2' ...
	- launch first found command, preferred in \$YA_APP variable
	(prefixed by '+' to terminal)
	and/or substituted via \$YA_APP_<cmd> variables:
	$i"
	break
;;
*)
	pids=''
	rm -f "$envcache"
	[ -e /etc/udev/rules.d/88-autofs.rules -a ! -e /var/run/auto.dev ] && . /usr/share/ya-layout/autofs-all
	[ -x /usr/bin/dbus-launch ] && /usr/bin/dbus-launch --sh-syntax --exit-with-session >>$envcache && . "$envcache"
	xprop -root -remove _NET_NUMBER_OF_DESKTOPS -remove _NET_DESKTOP_NAMES -remove _NET_CURRENT_DESKTOP
	envir ya
	[ -s "$obconf" ] || obconfig "$obconf" $(1cfg openbox/rc.xml)
	xrdb -merge $(1cfg ya/Xresources) </dev/null
	i=`1cfg "ya/wallpaper.*"` && case "$desk" in
	*pcmanfm*)desk+=" -w $i";;
	esac
	export YA_DESKTOP
	ob3menu-cache /usr/bin/ob3menu --slow "$HOME/.config/ya/rc.xml"
	wm ${desk:+--startup "$desk"}
;;
esac
wm --restart
done
_exit
} 9>>"$pidfile.l"
