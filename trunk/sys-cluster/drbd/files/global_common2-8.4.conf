## ocfs2 dual-primary HA
## written by Denis Kaganovich, use on own risk
## even sb-2pri will be resolved by single-reboot
## default behaviour: on connection lost both work separately until connect...
##
## ... to activate "suicidal soft-STONITH" - use (per-resource):
##
## net {
## 	after-sb-0pri discard-node-SLAVE; # SLAVE node name
## 	after-sb-1pri violently-as0p; # optional: think about shutdown
## 	# after-sb-1pri call-pri-lost-after-sb; # or
## }
## disk {
## 	fencing resource-and-stonith;
## }
##
##  - this will reboot SLAVE node if connection lost ("fence-peer" handler)
## to prevent _unmanaged_ split-brains (not shutdown)
## use no "drbd down/stop" on MASTER shutdown to kill SLAVE on shutdown too
## or simulate split-brain on drbd stop, but managed stop is HA without cost
##
## RTFM: call-pri-lost-after-sb, but have double reboot too,
## violently-as0p + rr-conflict IMHO sometimes smarter (at least same).

global {
	usage-count yes;
	# minor-count dialog-refresh disable-ip-verification
}

common {
	handlers {
		pri-on-incon-degr "/usr/lib/drbd/notify-pri-on-incon-degr.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
		pri-lost-after-sb "/usr/lib/drbd/notify-pri-lost-after-sb.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
		local-io-error "/usr/lib/drbd/notify-io-error.sh; /usr/lib/drbd/notify-emergency-shutdown.sh; echo o > /proc/sysrq-trigger ; halt -f";

		# fence-peer "/usr/lib/drbd/crm-fence-peer.sh";

		## soft-STONITH ("slave" suicide, inactive by default):
		fence-peer "( /sbin/drbdsetup $DRBD_MINOR show|grep -q '^[ 	]*after-sb-0pri[ 	]*discard-local;' && echo b > /proc/sysrq-trigger ) || /sbin/drbdsetup $DRBD_MINOR resume-io ; ex(){ return 5;};ex";

		# split-brain "/usr/lib/drbd/notify-split-brain.sh root";
		# out-of-sync "/usr/lib/drbd/notify-out-of-sync.sh root";
		# after-resync-target /usr/lib/drbd/unsnapshot-resync-target-lvm.sh;

		## "violently" primary sync? -> reboot SyncTarget
		## 1) reboot ASAP
		# pri-lost "/usr/lib/drbd/notify-pri-lost.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
		# pri-lost-after-sb "/usr/lib/drbd/notify-pri-lost-after-sb.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
		## 2) normal reboot/shutdown
		pri-lost "/usr/lib/drbd/notify-pri-lost.sh; /usr/lib/drbd/notify-emergency-reboot.sh; reboot";
		pri-lost-after-sb "/usr/lib/drbd/notify-pri-lost-after-sb.sh; /usr/lib/drbd/notify-emergency-reboot.sh; reboot";
		## 3) shutdown heartbeat & reboot ASAP (1 + more HA)
		# pri-lost "/usr/lib/drbd/notify-pri-lost.sh; /usr/lib/drbd/notify-emergency-reboot.sh; /etc/init.d/heartbeat stop; echo b > /proc/sysrq-trigger ; reboot -f";
		# pri-lost-after-sb "/usr/lib/drbd/notify-pri-lost-after-sb.sh; /usr/lib/drbd/notify-emergency-reboot.sh; /etc/init.d/heartbeat stop; echo b > /proc/sysrq-trigger ; reboot -f";

		## additional protection level against violently primary resync
		## WARNING!! DO NOT REMOVE (non-0 exit code)
		before-resync-target "/sbin/drbdsetup $DRBD_MINOR secondary";
		# before-resync-target "/sbin/drbdsetup $DRBD_MINOR secondary && /usr/lib/drbd/snapshot-resync-target-lvm.sh -p 15 -- -c 16k";

		## DONTUSE: good in theory, but buggy - I got frozen lock
		# after-resync-target "/sbin/drbdsetup $DRBD_MINOR primary";
	}

	startup {
		# wfc-timeout degr-wfc-timeout outdated-wfc-timeout wait-after-sb

		wfc-timeout 0;
		degr-wfc-timeout 0;
		outdated-wfc-timeout 0;
		wait-after-sb;
		become-primary-on both; # - Enable this *after* initial testing
	}
	
	options {
		# cpu-mask on-no-data-accessible
	}

	disk {
		# size max-bio-bvecs on-io-error fencing disk-barrier disk-flushes
		# disk-drain md-flushes resync-rate resync-after al-extents
		# c-plan-ahead c-delay-target c-fill-target c-max-rate
		# c-min-rate disk-timeout
	}

	net {
		# protocol timeout max-epoch-size max-buffers unplug-watermark
		# connect-int ping-int sndbuf-size rcvbuf-size ko-count
		# allow-two-primaries cram-hmac-alg shared-secret after-sb-0pri
		# after-sb-1pri after-sb-2pri always-asbp rr-conflict
		# ping-timeout data-integrity-alg tcp-cork on-congestion
		# congestion-fill congestion-extents csums-alg verify-alg
		# use-rle

 		protocol C;
		cram-hmac-alg sha1;
		shared-secret PAssWORD;
		allow-two-primaries;
		rr-conflict call-pri-lost;
		ko-count 1;
		after-sb-0pri discard-least-changes;
		after-sb-1pri discard-secondary; # ha
		# after-sb-2pri call-pri-lost-after-sb; # rtfm
		# after-sb-1pri call-pri-lost-after-sb; # rtfm least
		## DANGEROUS!! care rr-conflict/pri-lost and|or before-resync-target
		after-sb-2pri violently-as0p;
		# after-sb-1pri violently-as0p; # least
		use-rle;
		verify-alg sha1;
		csums-alg sha1;
	}
}
