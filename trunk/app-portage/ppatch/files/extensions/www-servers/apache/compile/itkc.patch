cgroups for mpm-itk for Apache

Usage: AssignUserID USER GROUP [/dev/cgroup/CGROUP/tasks]
(Too simple: user or group must be changed to change cgroup.)

Signed-off-by: Denis Kaganovich <mahatma@eu.by>

--- a/server/mpm/experimental/itk/itk.c	2011-02-28 22:40:33.000000000 +0200
+++ b/server/mpm/experimental/itk/itk.c	2011-03-01 01:18:46.000000000 +0200
@@ -164,6 +164,7 @@ typedef struct
     gid_t gid;
     char *username;
     int nice_value;
+    char *pidfile;
 } itk_per_dir_conf;
 
 typedef struct
@@ -1421,6 +1422,7 @@ static int itk_post_perdir_config(reques
     gid_t wanted_gid;
     const char *wanted_username;
     int err = 0;
+    int pidf;
     
     itk_server_conf *sconf =
         (itk_server_conf *) ap_get_module_config(r->server->module_config, &mpm_itk_module);
@@ -1465,6 +1467,19 @@ static int itk_post_perdir_config(reques
     }
 
     if (!err && wanted_uid != -1 && wanted_gid != -1 && (getuid() != wanted_uid || getgid() != wanted_gid)) {
+        if (dconf->pidfile) {
+            pidf = fopen(dconf->pidfile, "a");
+            if (!pidf) {
+                 _DBG("fopen(%s): %s", dconf->pidfile, strerror(errno));
+                 err = 1;
+            } else {
+                 if (!fprintf(pidf, "%i\n", getpid())) {
+                    _DBG("fprintf(%s): %s", dconf->pidfile, strerror(errno));
+                    err = 1;
+                 }
+                 close(pidf);
+            }
+        }
         if (setgid(wanted_gid)) {
             _DBG("setgid(%d): %s", wanted_gid, strerror(errno));
             err = 1;
@@ -1623,12 +1638,13 @@ static const char *set_server_limit (cmd
     return NULL;
 }
 
-static const char *assign_user_id (cmd_parms *cmd, void *ptr, const char *user_name, const char *group_name)
+static const char *assign_user_id (cmd_parms *cmd, void *ptr, const char *user_name, const char *group_name, const char *pid_file)
 {
     itk_per_dir_conf *dconf = (itk_per_dir_conf *) ptr;
     dconf->username = apr_pstrdup(cmd->pool, user_name);
     dconf->uid = ap_uname2id(user_name);
     dconf->gid = ap_gname2id(group_name);
+    dconf->pidfile = pid_file ? apr_pstrdup(cmd->pool, pid_file) : NULL;
     return NULL;
 }
 
@@ -1674,7 +1690,7 @@ AP_INIT_TAKE1("MaxClients", set_max_clie
               "Maximum number of children alive at the same time"),
 AP_INIT_TAKE1("ServerLimit", set_server_limit, NULL, RSRC_CONF,
               "Maximum value of MaxClients for this run of Apache"),
-AP_INIT_TAKE2("AssignUserID", assign_user_id, NULL, RSRC_CONF|ACCESS_CONF,
+AP_INIT_TAKE23("AssignUserID", assign_user_id, NULL, RSRC_CONF|ACCESS_CONF,
               "Tie a virtual host to a specific child process."),
 AP_INIT_TAKE1("MaxClientsVHost", set_max_clients_vhost, NULL, RSRC_CONF,
               "Maximum number of children alive at the same time for this virtual host."),
@@ -1691,6 +1707,7 @@ static void *itk_create_dir_config(apr_p
         apr_pcalloc(p, sizeof(itk_per_dir_conf));
     c->uid = c->gid = -1;
     c->nice_value = UNSET_NICE_VALUE;
+    c->pidfile = NULL;
     return c;
 }
 
@@ -1706,10 +1723,12 @@ static void *itk_merge_dir_config(apr_po
       c->username = apr_pstrdup(p, child->username);
       c->uid = child->uid;
       c->gid = child->gid;
+      c->pidfile = child->pidfile ? apr_pstrdup(p, child->pidfile) : NULL;
     } else if (parent->username != NULL) {
       c->username = apr_pstrdup(p, parent->username);
       c->uid = parent->uid;
       c->gid = parent->gid;
+      c->pidfile = parent->pidfile ? apr_pstrdup(p, parent->pidfile) : NULL;
     }
     if (child->nice_value != UNSET_NICE_VALUE) {
       c->nice_value = child->nice_value;
