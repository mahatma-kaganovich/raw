--- a/drivers/video/via/viafbdev.c	2010-12-07 18:35:22.000000000 +0200
+++ c/drivers/video/via/viafbdev.c	2010-12-09 04:04:49.000000000 +0200
@@ -1485,6 +1485,135 @@ static int parse_mode(const char *str, u
 	return 0;
 }
 
+/* stage=0: count devices to set dual and/or SAMM;
+   stage=1: add devices, detected only via i2c legacy;
+   set LCD/DVI/CRT if viafb_active_dev unset */
+static void viafb_detect_dev(int stage, struct viafb_dev *vdev)
+{
+	u8 *edid;
+	struct fb_var_screeninfo var;
+	int i, t, ndev = 0, nlcd = 0, unknown = 0;
+	struct i2c_adapter *adapter;
+	struct lvds_setting_information *inf;
+
+	/* FIXME: viaparinfo1->chip_info looks equal to viaparinfo */
+	i = !viafb_active_dev && stage;
+	if (viaparinfo->chip_info->tmds_chip_info.tmds_chip_name) {
+		ndev++;
+		if (i)
+			viafb_DVI_ON = STATE_ON;
+	}
+	if (viaparinfo->chip_info->lvds_chip_info.lvds_chip_name) {
+		ndev++;
+		nlcd = 1;
+		if (i)
+			viafb_LCD_ON = STATE_ON;
+	}
+	if (viaparinfo->chip_info->lvds_chip_info2.lvds_chip_name) {
+		ndev++;
+		nlcd = 2;
+		if (i)
+			viafb_LCD2_ON = STATE_ON;
+	}
+	/* enabling CRT in textmode is at least no bad */
+	if (viafb_CRT_ON) {
+		ndev++;
+		via_set_state(VIA_CRT, VIA_STATE_ON);
+	}
+	for (i = 0; i < VIAFB_NUM_PORTS; i++) {
+		t = vdev->port_cfg[i].type;
+		/* detect only i2c ports, undetected in other places */
+		if ((viaparinfo && viaparinfo->chip_info && (
+		    (viaparinfo->chip_info->tmds_chip_info.tmds_chip_name &&
+		    viaparinfo->chip_info->tmds_chip_info.i2c_port == t) ||
+		    (viaparinfo->chip_info->lvds_chip_info.lvds_chip_name &&
+		    viaparinfo->chip_info->lvds_chip_info.i2c_port == t) ||
+		    (viaparinfo->chip_info->lvds_chip_info2.lvds_chip_name &&
+		    viaparinfo->chip_info->lvds_chip_info2.i2c_port == t)
+		    )) || (viaparinfo1 && viaparinfo1->chip_info && (
+		    (viaparinfo1->chip_info->tmds_chip_info.tmds_chip_name &&
+		    viaparinfo1->chip_info->tmds_chip_info.i2c_port == t) ||
+		    (viaparinfo1->chip_info->lvds_chip_info.lvds_chip_name &&
+		    viaparinfo1->chip_info->lvds_chip_info.i2c_port == t) ||
+		    (viaparinfo1->chip_info->lvds_chip_info2.lvds_chip_name &&
+		    viaparinfo1->chip_info->lvds_chip_info2.i2c_port == t)
+		    )) || !(adapter = viafb_find_i2c_adapter(i)) ||
+		    !(edid = fb_ddc_read(adapter)))
+			continue;
+		memset(&var, 0, sizeof(var));
+		if (fb_parse_edid(edid, &var))
+			goto free_edid;
+		printk(KERN_INFO "viafb: %48s\n", adapter->name);
+		inf = NULL;
+		if (!stage) {
+		} else if (!nlcd) {
+			fb_edid_to_monspecs(edid, &viafbinfo->monspecs);
+			if (viafbinfo->monspecs.input & FB_DISP_DDI)
+				inf = viaparinfo->lvds_setting_info;
+			else
+				unknown++;
+		} else if (nlcd > 1) {
+			printk(KERN_ERR "viafb: too many LCD\n");
+			unknown++;
+		} else if (viafb_dual_fb) {
+			fb_edid_to_monspecs(edid, &viafbinfo1->monspecs);
+			if (viafbinfo1->monspecs.input & FB_DISP_DDI)
+				inf = viaparinfo1->lvds_setting_info;
+			else
+				unknown++;
+		} else {
+			fb_edid_to_monspecs(edid, &viafbinfo->monspecs);
+			if (viafbinfo->monspecs.input & FB_DISP_DDI)
+				inf = viaparinfo->lvds_setting_info2;
+			else
+				unknown++;
+		}
+		if (inf) {
+			if (!viafb_active_dev) {
+				if (nlcd)
+					viafb_LCD2_ON = STATE_ON;
+				else
+					viafb_LCD_ON = STATE_ON;
+			}
+			nlcd++;
+			if (var.xres)
+				inf->lcd_panel_hres = var.xres;
+			if (var.yres)
+				inf->lcd_panel_vres = var.yres;
+		}
+		ndev++;
+free_edid:
+		kfree(edid);
+	}
+	if (!viafb_active_dev) {
+		/* prefer CRT OFF if other devices */
+#if 1
+		if (unknown) {
+			if (!viafb_CRT_ON) {
+				viafb_CRT_ON = STATE_ON;
+				ndev++;
+			}
+		} else if (ndev > 1 && viafb_CRT_ON) {
+			viafb_CRT_ON = STATE_OFF;
+			ndev--;
+		}
+#endif
+		/* SAMM may be detected on stage 1,
+		   but troubles coming together & dual not wrong */
+		if (ndev > 1 && !stage)
+			viafb_SAMM_ON = viafb_dual_fb = STATE_ON;
+		viafb_DeviceStatus = viafb_primary_dev =
+		    viafb_CRT_ON ? CRT_Device :
+		    viafb_DVI_ON ? DVI_Device :
+		    viafb_LCD_ON ? LCD_Device : None_Device;
+		if (stage) {
+			if (!viafb_CRT_ON)
+				via_set_state(VIA_CRT, VIA_STATE_OFF);
+			viafb_set_iga_path();
+		}
+	}
+}
+
 
 int __devinit via_fb_pci_probe(struct viafb_dev *vdev)
 {
@@ -1526,6 +1655,10 @@ int __devinit via_fb_pci_probe(struct vi
 	parse_dvi_port();
 
 	viafb_init_chip_info(vdev->chip_type);
+	/* detect dual_fb & SAMM_ON, but let's keep it to options */
+#if 0
+	viafb_detect_dev(0, vdev);
+#endif
 	/*
 	 * The framebuffer will have been successfully mapped by
 	 * the core (or we'd not be here), but we still need to
@@ -1675,6 +1808,8 @@ int __devinit via_fb_pci_probe(struct vi
 	viafb_init_proc(&viaparinfo->shared->proc_entry);
 #endif
 	viafb_init_dac(IGA2);
+	/* update from legacy i2c DDC info */
+	viafb_detect_dev(1, vdev);
 	return 0;
 
 out_fb_unreg:
--- a/drivers/video/via/hw.c	2011-01-14 20:06:35.330000001 +0200
+++ c/drivers/video/via/hw.c	2011-01-14 20:09:01.630000001 +0200
@@ -1135 +1135 @@ static void set_lvds2_state(u8 state)
-void via_set_state(u32 devices, u8 state)
+void  via_set_state(u32 devices, u8 state)
