#!/bin/sh
# some of busyboxes dont have mdev, some - mdev.conf|/dev/input/
# mdev -h

DETECTBLK=false
Q=-qs
O=/dev/null

mdevs(){
	local i
	[[ -e "$1" ]] && for i in $*; do
		local DEVNAME="" MAJOR="" MINOR="" FIRMWARE="" DEVPATH="" DEVMODE=""
		eval "$(sed -e 's:^\(.*\)=\([^"].*[^"]\)$:\1="\2":g' -e 's/^[^=]*$//g' <"$i")" || echo "! $i"
		i="${i#/sys/class/}"
		case $ACTION in
		*change)_mdev "${i%%/*}";;
		*)[[ -e "/dev/$DEVNAME" ]] || _mdev "${i%%/*}";;
		esac
	done
}

modprobe(){
	local i m c
	read m </proc/sys/kernel/modprobe && [[ -x "$m" ]] || m="busybox modprobe"
	if [[ "$2" == "-a" ]] && ! $m -V -a >/dev/null 2>&1; then
		shift 2
		for i in "${@}"; do
			$m $Q "$i"
		done
	else
		$m $Q "${@}"
	fi
}

modmdev(){
	[[ -z "$MODALIAS" ]] && return
	! [[ -d /etc/modalias ]] && echo "$MODALIAS" >>/etc/modalias || {
		loadsh modprobe
		modprobe "${@}" $MODALIAS 2>>$O
	}
}

loadsh(){
	[[ "${SHLOADED##* $1 }" == "${SHLOADED}" ]] &&
		[[ -e /etc/$1.sh ]] && . /etc/$1.sh && SHLOADED="$SHLOADED $1 "
	return $?
}

mods(){
	find /lib/modules/$KV/ /lib/modules/$KV/kernel/|grep "/$*/.*\.ko\$\|$*\.ko\$"|sed -e 's:^.*/::g' -e 's:\.ko$::g'|sort -u
}

_fs(){
	local i
	for i in `grep ":.* TYPE="|sed -e 's:^.* TYPE="\([^"]*\)".*$:\1:g'|sort -u`; do
		grep -q "	$i$" /proc/filesystems && continue
		case "$i" in
		lvm2*)	[[ -e /dev/mapper/control ]] && continue
			i="/md/dm-.*"
		;;
		*)grep -q "	$i$" /proc/filesystems && continue;;
		esac
		mods "$i"
	done
}

mnt(){
	local t="${t:-auto}"
	[[ "$t" == auto ]] || grep -q "	$t$" /proc/filesystems || modprobe $Q -a `mods "$t"`
	mount -o "${o:-ro}" -t "$t" "$DEVNAME" $p 2>>$O
	return $?
}

lofind(){
	local i ACTION=_change
	grep -sF " $p " /etc/mtab /proc/mounts|grep -om1 "^/dev/loop[^ ]*" && return 0
	for i in /dev/loop*; do
		losetup "$i" "$DEVNAME" 2>>$O || continue
		mdevs /sys/class/block/loop*/uevent
		echo "$i"
		return 0
	done
	return 1
}

try_mnt(){
	if [[ "$p" == /newroot ]] && ! grep -sq "^/dev/[^ ]* / " /proc/mounts /etc/mtab; then
		mkdir $p 2>>$O || return 1
		mnt && ( [[ -e $p/sbin/init ]] &&
		    ( grep -q "^$DEVNAME[ 	][ 	]*/[ 	]" $p/etc/fstab || ${1:-fstab} "$p" / ) || (
		    umount $p;false ) ) || rmdir $p
		[[ -e $p ]]
	else
		mnt
	fi
	return $?
}

try_mnt_loop(){
	[[ -f "$DEVNAME" ]] && {
		[[ -e /sys/class/block/loop0 ]] || {
			modprobe $Q loop 2>>$O
			local ACTION=add
			mdevs /sys/class/block/loop*/uevent

		}
#		mnt && return 0
		local i="$DEVNAME"
		DEVNAME=`lofind` || {
			losetup -d "$DEVNAME" 2>>$O
			DEVNAME="$i"
		}
	}
	mnt
	return $?
}


fstab(){
	local d p t o x a
	sed -e "s:#.*$::g" <$1/etc/fstab | while read d p t o x; do
		[[ -z "$p" ]] && continue
		[[ -z "${p##$2}" ]] || continue
		[[ -n "$3" ]] && {
			[[ -z "${3##$d}" ]] && return 0
			continue
		}
		if [[ "${1:-/}" == / ]]; then
			# loop,nfs,...
			local DEVNAME="$d"
			try_mnt_loop && continue
		else
			fstab / /newroot "$d"||continue
		fi
		case "$d" in
		/dev/drbd*)modprobe $Q drbd;blk2=true;;
		/dev/md*)
			a=
			mdadm --examine --scan -v|while read x; do
				if [[ "${i#ARRAY $d }" != "$x" ]]; then
					a=1
				elif [[ "${x#ARRAY }" != "$x" ]]; then
					a=
				else
					x=" $x"
				fi
				[[ -n "$a" ]] && echo "$x"
			done >>/etc/mdadm.conf
			modprobe $Q -a `grep " level=" /etc/mdadm.conf | sed -e 's:^.* level=\([^ ]*\) .*$:\1:g' | sort -u`
			mdadm --assemble --scan
			blk2=true
		;;
		/dev/mapper*)	[[ -e /dev/mapper/control ]] || {
				modprobe $Q -a $(mods "md/dm-*")
				blk2=true
		};;
		esac
	done
	return 1
}

_mdev(){
local i t=c new=false
case "$1:$ACTION" in
#block:change)t=b;rm -f "/dev/$DEVNAME";;
#*:change)rm -f "/dev/$DEVNAME";;
block:*)t=b;;
*:remove)
	rm "/dev/$DEVNAME"
	return
;;
*:add)
	modmdev --
	new=true
;;
esac
if [[ -n "$FIRMWARE" ]] && echo 1 >/sys/$DEVPATH/loading; then
	[[ -e /lib/firmware/$FIRMWARE ]] && cat /lib/firmware/$FIRMWARE >/sys/$DEVPATH/data && echo 0 >/sys/$DEVPATH/loading || echo -1 >/sys/$DEVPATH/loading
fi
if [[ -n "$DEVNAME" ]]; then
	DEVNAME="/dev/$DEVNAME"
	mkdir -p "${DEVNAME%/*}"
	! [[ -e "$DEVNAME" ]] && mknod -m ${DEVMODE:-0600} "$DEVNAME" $t $MAJOR $MINOR && new=true
fi
case "$DEVNAME" in
/dev/mapper/control)
	vgchange -ay --ignorelockingfailure 2>>$O
	dmraid -ay
;;
/dev/loop*)new=false;; # vs "fixed" umount
esac
[[ -b "$DEVNAME" ]] && [[ "`cat "/sys/block${DEVNAME#/dev}/size" 2>/dev/null`" != 0 ]] && if $DETECTBLK || [[ -d /etc/modalias ]]; then
		loadsh blkid
		: ${KV:=`uname -r`}
		local id="`blkid $DEVNAME`" d p o t x
		modprobe $Q -a $(echo "$id"|_fs) 2>>$O
		$new && {
		id="$DEVNAME `echo "$id"|sed -e 's/^[^ ]*://' -e 's:\( [A-Z]*=\)\"\([^"]*\)\":\1\2\1"\2":g'`" #'
		sed -e "s:#.*$::g" </etc/fstab|while read d p t o x; do
			[[ -n "$d" ]] && for i in $id; do
				[[ -n "${i##$d}" ]] || {
					try_mnt
					break
				}
			done
		done
		}
fi
}

mdev(){
local i j x
while [[ -n "$*" ]]; do
case "$1" in
-v|-vs)Q=$1;O=/dev/stderr;[[ -e $O ]]||O=/dev/console;;
-q|-qs)Q=$1;O=/dev/null;;
-b)DETECTBLK=true;;
-m|-i|-M)
	i=/etc/modalias
	loadsh modprobe
	[[ "$1" == "-m" ]] && modprobe $Q -a `echo ""|grep -sh "^MODALIAS=" $(grep -sL "^DRIVER=" $(find /sys -name uevent|sort))|sed -e 's:^MODALIAS=::g'|uniq` 2>>$O
	while ! ( [[ "$1" == "-i" ]] && ln -s /sys $i 2>/dev/null ) && [[ -f $i ]] && mv $i ${i}_ ; do
		modprobe $Q -a `cat ${i}_` 2>>$O
		rm ${i}_
	done
;;
-w)	modprobe $Q scsi_wait_scan
	rmmod scsi_wait_scan
	rm /temp/cache/modprobe/scsi_wait_scan.m -f
;;
-s|-S)
	local ACTION
	[[ "$1" == "-S" ]] && ACTION=_change || ACTION=_add
	shift
	for i in "${@:-"*"}"; do
		case "$i" in
		-*)mdev $i;;
		*)mdevs /sys/class/$i/*/uevent;;
		esac
	done
	return
;;
-a)mdev -s mem -i -b -m -w "*";;
-*init)
	local blk2=false
	/bin/busybox mount /proc||mount /proc
	/bin/busybox --install -s
	mount /sys
	mdev -b -s mem -i
	fstab / "*"
	mdev -s block
#	mdev -b -s mem
#	modprobe $Q -a `cat /etc/modalias` 2>>$O
#	mdev -s block
#	mount -a 2>>$O
	SHLOADED=""
	mkdir -p /temp/cache/modprobe
#	mdev -i
	i="-"
	while ! ( [[ $1 == -fastinit ]] && [[ -e /newroot ]] ) && j=`cat /proc/modules` && [[ "$i" != "$j" ]]; do
		echo -n .
		mdev -m -w -s block misc
		while $blk2; do
			blk2=false
			mdev -s misc block
		done
		i="$j"
	done
	[[ -e /sys/module/drm_kms_helper ]] && modprobe $Q fbcon 2>>$O
	[[ -e /newroot ]] || {
		fstab / /newroot
		while $blk2; do
			blk2=false
			mdev -s misc block
		done
	}
	j=0
	for i in /sys/module/*; do
		let j=j+1
	done
	echo -n "$j modules / "
	cat /proc/uptime
	cd /newroot && {
		i=`ls /dev/loop*`
		umount `grep -vh "^[^ ]* /newroot[/ ]\|^[^ ]* / " /proc/mounts /etc/mtab|sed -e 's:^[^ ]* \([^ ]*\) .*$:\1:'|sort -u`
		for i in $i; do
			losetup -d "$i"
		done 2>>/dev/null
		mount
		exec /sbin/switch_root -c /dev/console /newroot /sbin/init
	}
	shift
	ln -s $0 /sbin/hotplug
	mdev -m -s "*" -i
	rm -Rf /temp/cache/modprobe
	[[ -n "$*" ]] && exec "${@}"
;;
-*)echo 'mdev replacement, (c) Denis Kaganovich, under Anarchy or GPLv2 license
Named "hotplug" will detect /newroot, "mdev" - no, "*init|*rc" - initrc.
Options:
-s [c]	populate /dev from /sys/class/[c]
-v|q[s]	output
-b	modprobe new fs
-m	scan+modprobe modaliases
-i	install: modaliases ASAP|background
-w	scsi_wait_scan
-a	= mdev -s mem -i -b -m -w "*"
-[fast]init	initrc
Example: mdev -s "*" -m'
return
;;
*)_mdev $1;;
esac
shift
done
}

case $0 in
*rc|*init)mdev -init /bin/sh;;
*mdev)mdev "${@}";;
*hotplug)mdev -b "${@}";;
esac
