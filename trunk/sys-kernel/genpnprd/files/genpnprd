#!/bin/bash
## fix genkernel initrd
## adding PNP
## (c) Denis Kaganovich
## under Anarchy license
## Usage: genpnprd <image> [nopnp|pnponly|[pnp] [<overlay>]]

DATA="/usr/share/genpnprd"

#UROOT="$ROOT"
UROOT=""

die(){
	echo "Error $*"
	exit 1
}


preserve_start(){
	local m mm="$rcdir/lib/modules/${KV}"
	rm $tmp/modules.dep -f &>/dev/null
	$PNPONLY && source "$mm/modules.alias.sh"
	for m in $* ; do
		if $PNPONLY; then
			alias2 $m
			echo "$ALIAS" >>$tmp/modules.lst
		else
			grep "/$m\..*:" ${mm}/modules.dep >>$tmp/modules.lst || find ${mm} -name $m.ko >>$tmp/modules.lst
		fi
	done
	cd $rcdir || die
	mkdir $tmp/preserve || die
	cd "lib/modules/$KV"
	mkdir -p "$tmp/preserve/lib/modules/$KV"
	for m in `cat $tmp/modules.lst` ; do
		m="${m%:}"
		cp "${m#*/lib/modules/$KV}" "$tmp/preserve/lib/modules/$KV/" --parents
		$PNPONLY || ( [[ -e "$mm/modules.dep" ]] && grep "^$m:" $mm/modules.dep >>$tmp/preserve/lib/modules/${KV}/modules.dep )
	done
	$PNPONLY || ${UROOT}/usr/share/genpnprd/mod2sh.pl $tmp/preserve/lib/modules/${KV}
	cd $rcdir
}

preserve_end(){
	mv $tmp/preserve/* $rcdir -f &>/dev/null
}

squashfs_enabled(){
	[[ -e "$rcdir/lib/modules/$KV/kernel/fs/squashfs" ]] && return 0
	return 1
}

SQUASH=false
tmp="${TMPDIR:=$ROOT/var/tmp}/genpnprd"
[[ -e "$tmp" ]] && rm "$tmp" -Rf
mkdir $tmp || die

rcfile="$(readlink -f $1)"
if [[ -f "$rcfile" ]]; then
	rcdir="$tmp/rc"
	[[ -e "$rcdir" ]] && rm "$tmp" -Rf
	mkdir "$rcdir" || die
	cd "$rcdir" || die
	echo $rcdir
	( gzip -dc $rcfile | cpio -i ) || cpio -i <$rcfile || die "must be [gzipped] cpio file"
else
#	rcdir="$rcfile"
	die "must be [gzipped] cpio file"
fi

mkdir lib/root
if [[ -n "$3" ]]; then
	cp "$3" lib/root -aT
	for i in lib lib32 lib64; do
		[[ -d lib/root/$i ]] && mv lib/root/$i/* $i/
	done
	rm lib/root/{lib,lib32,lib64} -Rf
fi

if [[ -e "$rcdir/lib.loopfs" ]]; then
	mkdir $tmp/loop
	mount "$rcdir/lib.loopfs" $tmp/loop -o loop || die "$rcdir/lib.loopfs mount"
	cp $tmp/loop/* $rcdir/lib/ -Pr
	umount $tmp/loop
fi

KV=`ls $rcdir/lib/modules`

if squashfs_enabled; then
	SQUASH=true
fi

cd $rcdir || die
[[ "$2" != "nopnp" ]] && /usr/bin/perl ${UROOT}/usr/share/genpnprd/mod2sh.pl $rcdir/lib/modules/* || die
PNPONLY=false
[[ "$2" == "pnponly" ]] && PNPONLY=true && rm $rcdir/lib/modules/*/modules.{alias,dep,symbols,*.bin,*map,order,builtin} $rcdir/sbin/modprobe
cp $DATA/syspnp $rcdir/etc
cp $DATA/modprobe.sh $rcdir/etc
patch -p1 -std $rcdir <$DATA/linuxrc.patch
rm $rcdir/init.{rej,orig} -f &>/dev/null

# Symlinking busybox clones
for i in $rcdir/bin/* ; do
	[[ -e "$i" ]] || continue
	[[ "${i%/busybox}" == "$i" ]] || continue
	cmp "$rcdir/bin/busybox" "$i" && ln -sf busybox "$i"
done

rm "$rcdir/lib.loopfs"
if $SQUASH ; then
	preserve_start loop squashfs
	mksquashfs "$rcdir/lib" "$rcdir/lib.loopfs" -all-root -no-recovery -no-progress || die "mksquashfs"
else
	preserve_start loop cramfs
	mkcramfs "$rcdir/lib" "$rcdir/lib.loopfs" || die "mkcramfs"
fi
rm $rcdir/lib/* -Rf
preserve_end

for i in 0 1 2 3; do
	mknod -m 660 "$rcdir/dev/loop${i}" b 7 ${i}
done

cd $rcdir || die
find . -print | cpio --quiet -o -H newc -F "$tmp/initrd-${KV}.cpio" || die
cd $tmp || die
rm $rcdir -Rf
gzip -c9 "$tmp/initrd-${KV}.cpio" >"$1" || die
rm "$tmp" -Rf
echo "initrd updated."

exit 0
