--- spamass-milter.cpp.orig	2022-08-30 19:15:00.197907467 +0300
+++ spamass-milter.cpp	2022-08-30 19:26:01.659180278 +0300
@@ -181,6 +181,7 @@ char **spamc_argv;
 bool flag_bucket = false;
 bool flag_bucket_only = false;
 char *spambucket;
+bool quarantine = false;	/* quarantine auth users */
 bool flag_full_email = false;		/* pass full email address to spamc */
 bool flag_expand = false;	/* alias/virtusertable expansion */
 bool warnedmacro = false;	/* have we logged that we couldn't fetch a macro? */
@@ -193,7 +194,7 @@ int
 main(int argc, char* argv[])
 {
    int c, err = 0;
-   const char *args = "aAfd:mMp:P:r:l:u:D:i:b:B:e:xS:R:c:C:g:T:";
+   const char *args = "QaAfd:mMp:P:r:l:u:D:i:b:B:e:xS:R:c:C:g:T:";
    char *sock = NULL;
    char *group = NULL;
    bool dofork = false;
@@ -303,6 +304,9 @@ main(int argc, char* argv[])
                 debug(D_MISC, "Parsing recipient address ignore list");
                 parse_addresslist(optarg, &ignoreaddrs);
                 break;
+            case 'Q':
+        	quarantine = true;
+        	break;
             case '?':
                 err = 1;
                 break;
@@ -357,6 +361,7 @@ main(int argc, char* argv[])
       cout << "   -A: Scan but only tag messages affected by -a, -T and -i, never reject or defer them." << endl;
       cout << "   -T: skip (ignore) checks if any recipient is in this address list" << endl;
       cout << "          example: -T foo@bar.com,spamlover@yourdomain.com" << endl;
+      cout << "   -Q: quarantine from authenticated connection (sendmail feature hf*)" << endl;
       cout << "   -- spamc args: pass the remaining flags to spamc." << endl;
 
       exit(EX_USAGE);
@@ -881,6 +886,9 @@ mlfi_envfrom(SMFICTX* ctx, char** envfro
     if (auth_type) {
       debug(D_MISC, "auth_type=%s", auth_type);
       sctx->onlytag=true;
+      if(quarantine){
+        smfi_quarantine(ctx, FilterName);
+      }
       if(!alwaystag){
         debug(D_FUNC, "mlfi_envfrom: auth exit ignore");
         return SMFIS_ACCEPT;
