--- a/configure	2016-08-29 00:21:49.000000000 +0300
+++ b/configure	2016-08-29 00:50:56.000000000 +0300
@@ -6254,10 +6254,11 @@ echo >&5 "libc_undefs='$libc_undefs'"
 # defaults to -fstack-protector but this produces an undefined symbol
 # other than __stack_chk_fail.  However, compilers like that have not
 # been encountered in practice.
-libc_undefs=`echo "$libc_undefs" | egrep '^(foobar|__stack_chk_fail)$'`
+libc_undefs=`echo "$libc_undefs" | egrep '^(foobar|__stack_chk_fail|__stack_chk_fail_local)$'`
 case "$libc_undefs" in
 foobar) libc_cv_predef_stack_protector=no ;;
-'__stack_chk_fail
+'__stack_chk_fail_local
+foobar'|'__stack_chk_fail
 foobar') libc_cv_predef_stack_protector=yes ;;
 *) as_fn_error $? "unexpected symbols in test: $libc_undefs" "$LINENO" 5 ;;
 esac
--- a/configure.ac	2016-02-18 20:54:00.000000000 +0300
+++ b/configure.ac	2016-08-29 00:51:43.000000000 +0300
@@ -1605,10 +1605,11 @@ echo >&AS_MESSAGE_LOG_FD "libc_undefs='$
 # defaults to -fstack-protector but this produces an undefined symbol
 # other than __stack_chk_fail.  However, compilers like that have not
 # been encountered in practice.
-libc_undefs=`echo "$libc_undefs" | egrep '^(foobar|__stack_chk_fail)$'`
+libc_undefs=`echo "$libc_undefs" | egrep '^(foobar|__stack_chk_fail|__stack_chk_fail_local)$'`
 case "$libc_undefs" in
 foobar) libc_cv_predef_stack_protector=no ;;
-'__stack_chk_fail
+'__stack_chk_fail_local
+foobar'|'__stack_chk_fail
 foobar') libc_cv_predef_stack_protector=yes ;;
 *) AC_MSG_ERROR([unexpected symbols in test: $libc_undefs]) ;;
 esac],
