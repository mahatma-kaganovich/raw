--- a/src/kb.c	2009-04-20 10:33:29.000000000 +0300
+++ b/src/kb.c	2017-12-16 18:17:20.091137894 +0300
@@ -855,15 +855,17 @@ void kb_set_slide(button *active_but, in
 
 }
 
-void kb_do_repeat(keyboard *kb, button *active_but)
+Bool kb_do_repeat(keyboard *kb, button *active_but)
 {
   static int timer;
   static Bool delay;
+  if (!kb->key_repeat)
+    return False;
   if (active_but == NULL) 
     {
       timer = 0; 
       delay = False;
-      return; /* reset everything */
+      return False; /* reset everything */
     }
   timer++;
   if ((delay && timer == kb->key_repeat)
@@ -873,6 +875,7 @@ void kb_do_repeat(keyboard *kb, button *
       timer = 0;
       delay = True;
     }
+    return True;
 }
 
 int kb_process_keypress(button *active_but)
--- a/src/kb.h	2002-08-11 15:14:02.000000000 +0300
+++ b/src/kb.h	2017-12-16 18:15:31.291671340 +0300
@@ -27,7 +27,7 @@ void kb_render(keyboard *kb);
 void kb_paint(keyboard *kb);
 void kb_destroy(keyboard *kb);
 button *kb_handle_events(keyboard *kb, XEvent an_event);
-void kb_do_repeat(keyboard *kb, button *active_but);
+Bool kb_do_repeat(keyboard *kb, button *active_but);
 void kb_set_slide(button *active_but, int x, int y);
 int kb_process_keypress(button *active_but);
 int kb_find_keycode(keyboard *kb, KeySym keysym, 
--- a/src/libXkbd.c	2002-03-19 20:18:42.000000000 +0200
+++ b/src/libXkbd.c	2017-12-16 18:15:31.291671340 +0300
@@ -52,9 +52,9 @@ xkbd_process(Xkbd *xkbd, XEvent *an_even
    xkbd->active_but = kb_handle_events(xkbd->kb, *an_event);
 }
 
-void xkbd_process_repeats(Xkbd *xkbd)
+Bool xkbd_process_repeats(Xkbd *xkbd)
 {
-   kb_do_repeat(xkbd->kb, xkbd->active_but);
+   return kb_do_repeat(xkbd->kb, xkbd->active_but);
 }
 
 int xkbd_get_width(Xkbd *xkbd)
--- a/src/libXkbd.h	2002-03-19 20:18:42.000000000 +0200
+++ b/src/libXkbd.h	2017-12-16 18:15:31.301671294 +0300
@@ -38,7 +38,7 @@ void xkbd_resize(Xkbd *xkbd, int width,
 void xkbd_move(Xkbd *kb, int x, int y);
 void xkbd_repaint(Xkbd *xkbd);
 void xkbd_process(Xkbd *xkbd, XEvent *an_event);
-void xkbd_process_repeats(Xkbd *xkbd);
+Bool xkbd_process_repeats(Xkbd *xkbd);
 int xkbd_get_width(Xkbd *xkbd);
 int xkbd_get_height(Xkbd *xkbd);
 void xkbd_destroy(Xkbd *xkbd);
--- a/src/xkbd.c	2009-04-20 13:21:46.000000000 +0300
+++ b/src/xkbd.c	2017-12-16 18:15:31.301671294 +0300
@@ -187,8 +187,6 @@ int main(int argc, char **argv)
    
    XEvent an_event;
 
-   int done = 0;
-   
    int i;
    char userconffile[256];
    FILE *fp;
@@ -414,18 +412,19 @@ int main(int argc, char **argv)
 		   StructureNotifyMask |
 		   VisibilityChangeMask);
        
-      while (!done)
+      while (1)
       {
-	 while ( XPending(display) ) 
-	 {
-
 	    XNextEvent(display, &an_event);
 	    xkbd_process(kb, &an_event);
 	    switch (an_event.type) {
 	       case ClientMessage:
 		  if ((an_event.xclient.message_type == wm_protocols[1])
 		      && (an_event.xclient.data.l[0] == wm_protocols[0])) 
-		     done = 1;
+		  {
+			xkbd_destroy(kb);
+			XCloseDisplay(display);
+			exit(0);
+		  }
 		  break;
 	       case ConfigureNotify:
 		  if ( an_event.xconfigure.width != xkbd_get_width(kb)
@@ -440,20 +439,15 @@ int main(int argc, char **argv)
 		  xkbd_repaint(kb);
 		  break;
 	    }
-	 }
-	 xkbd_process_repeats(kb);
-	 usleep(10000L); /* sleep for a 10th of a second */
+	    while (xkbd_process_repeats(kb) && !XPending(display))
+		usleep(10000L); /* sleep for a 10th of a second */
       }
-      xkbd_destroy(kb);
-      XCloseDisplay(display);
        
    } else {
       fprintf(stderr, "%s: cannot connect to X server '%s'\n",
 	      argv[0], display_name);
       exit(1);
    }
-   exit(0);
-   
 
 }
 
