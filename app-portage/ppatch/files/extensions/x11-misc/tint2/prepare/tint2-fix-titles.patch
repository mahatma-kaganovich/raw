Fix shorten path ($USER or root) from tint2-side.
In my case "export HOSTNAME" was required.

	<$USER|root>@[$HOSTNAME:[$HOME[/]]]path -> path
	mc "["<$USER|root>"]"@[$HOSTNAME:[$HOME[/]]]path -> path

	$USER -> path never starting from "/" (else - "~:/...")
	root ->always from "/"

--- a/src/taskbar/task.c	2019-07-15 09:15:40.000000000 +0300
+++ b/src/taskbar/task.c	2021-02-20 23:46:17.098697926 +0300
@@ -260,16 +260,17 @@ gboolean task_update_title(Task *task)
     if (!panel->g_task.has_text && !panel->g_task.tooltip_enabled && taskbar_sort_method != TASKBAR_SORT_TITLE)
         return FALSE;
 
-    char *name = server_get_property(task->win, server.atom._NET_WM_VISIBLE_NAME, server.atom.UTF8_STRING, 0);
-    if (!name || !strlen(name)) {
-        name = server_get_property(task->win, server.atom._NET_WM_NAME, server.atom.UTF8_STRING, 0);
-        if (!name || !strlen(name)) {
-            name = server_get_property(task->win, server.atom.WM_NAME, XA_STRING, 0);
+    Atom *natom = 0, *tatom = 0;
+    char *name = server_get_property(task->win, natom = server.atom._NET_WM_VISIBLE_NAME, tatom = server.atom.UTF8_STRING, 0);
+    if (!name || !*name) {
+        name = server_get_property(task->win, natom = server.atom._NET_WM_NAME, tatom = server.atom.UTF8_STRING, 0);
+        if (!name || !*name) {
+            name = server_get_property(task->win, natom = server.atom.WM_NAME, tatom = XA_STRING, 0);
         }
     }
 
     char *title;
-    if (name && strlen(name)) {
+    if (name && *name) {
         title = strdup(name);
     } else {
         title = strdup("Untitled");
@@ -282,10 +283,74 @@ gboolean task_update_title(Task *task)
         if (strcmp(task->title, title) == 0) {
             free(title);
             return FALSE;
+        }
+    }
+//  if (...) goto nofix;
+
+    static char *user = NULL, *hostname = NULL, *home = NULL;
+    static int s1 = 0, s2 = 0, s3 = 0;
+    char ch = 0, ch1 = ':', *title2 = title;
+    if (!home) {
+        home = "";
+        if ((user = getenv("USER"))) s1 = strlen(user);
+        if ((hostname = getenv("HOSTNAME"))) s2 = strlen(hostname);
+        if ((home = getenv("HOME"))) s3 = strlen(home);
+    }
+    if (!strncmp(title2,"mc ",3)) title2 += 3;
+    if (*title2 == '['){
+        title2++;
+        ch1 = ']';
+    }
+    if (s1 && strncmp(title2,user,s1 + 1) == '@') {
+        title2 += s1 + 1;
+        ch = '~';
+    } else if (!strncmp(title2,"root@",5)) {
+        title2 += 5;
+        ch = '/';
+    }
+    if (ch) {
+        if (s2 && strncmp(title2,hostname,s2 + 1) == ch1) {
+            title2 += s2 + 1;
+            if (ch1 == ']' && *title2 == ':') title2++;
+            if (ch == '~' && s3 && (strncmp(title2,home,s3 + 1) ? : '/') == '/') {
+                title2 += s3;
+                ch = 0;
+#if 1
+                if (*title2 == '/') title2++;
+#endif
+                if (*title2 == '/' || !*title2) *(--title2) = '~';
+            }
+            if (ch && *title2 != ch) {
+                *(--title2) = ':';
+                *(--title2) = ch;
+            }
         } else {
+            title2--;
+            if (ch != '~') *(--title2) = ch;
+            if (ch1 == ']') *(--title2) = '[';
+        }
+    }
+    if (title != title2) {
+        if (task->title) {
+            if (strcmp(task->title, title) == 0) {
+                free(title);
+                return FALSE;
+            }
             free(task->title);
+            task->title = NULL;
+        }
+        title2 = strdup(title2);
+        free(title);
+        title = title2;
+        if (natom) {
+            int len = strlen(title) + 1;
+            XChangeProperty(server.display,task->win,natom,tatom,8,PropModeReplace,(unsigned char *)title,len);
+            if (natom == server.atom._NET_WM_VISIBLE_NAME)
+                XChangeProperty(server.display,task->win,server.atom._NET_WM_NAME,server.atom.UTF8_STRING,8,PropModeReplace,(unsigned char *)title,len);
         }
     }
+//nofix:
+    if (task->title) free(task->title);
 
     task->title = title;
     GPtrArray *task_buttons = get_task_buttons(task->win);
