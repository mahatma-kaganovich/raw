--- a/source3/modules/vfs_ceph.c	2015-01-14 13:04:39.000000000 +0300
+++ b/source3/modules/vfs_ceph.c	2015-01-14 14:03:54.000000000 +0300
@@ -688,11 +688,23 @@
 	return -1;
 }
 
+// to do full:
+//   struct stat st;
+//   ceph_[l|f|]stat(handle->data, smb_fname->base_name, &st);
+// and compare more
+//static int cephwrap_test_own(uid_t uid, gid_t gid, stat *st)
+static int cephwrap_test_own(uid_t uid, gid_t gid)
+{
+	uid_t uid0 = geteuid();
+//	return uid0 == 0 || ((uid == -1 || uid == uid0) && (gid == -1 || gid == getegid())) ? 0 : EPERM;
+	return uid0 == 0 ?: EPERM;
+}
+
 static int cephwrap_chown(struct vfs_handle_struct *handle, const char *path, uid_t uid, gid_t gid)
 {
 	int result;
 	DEBUG(10, ("[CEPH] chown(%p, %s, %d, %d)\n", handle, path, uid, gid));
-	result = ceph_chown(handle->data, path, uid, gid);
+	result = cephwrap_test_own(uid, gid) ?: ceph_chown(handle->data, path, uid, gid);
 	DEBUG(10, ("[CEPH] chown(...) = %d\n", result));
 	WRAP_RETURN(result);
 }
@@ -703,7 +715,7 @@
 #ifdef HAVE_FCHOWN
 
 	DEBUG(10, ("[CEPH] fchown(%p, %p, %d, %d)\n", handle, fsp, uid, gid));
-	result = ceph_fchown(handle->data, fsp->fh->fd, uid, gid);
+	result = cephwrap_test_own(uid, gid) ?: ceph_fchown(handle->data, fsp->fh->fd, uid, gid);
 	DEBUG(10, ("[CEPH] fchown(...) = %d\n", result));
 	WRAP_RETURN(result);
 #else
@@ -718,7 +730,7 @@
 	int result;
 
 	DEBUG(10, ("[CEPH] lchown(%p, %s, %d, %d)\n", handle, path, uid, gid));
-	result = ceph_lchown(handle->data, path, uid, gid);
+	result = cephwrap_test_own(uid, gid) ?: ceph_lchown(handle->data, path, uid, gid);
 	DEBUG(10, ("[CEPH] lchown(...) = %d\n", result));
 	WRAP_RETURN(result);
 }
