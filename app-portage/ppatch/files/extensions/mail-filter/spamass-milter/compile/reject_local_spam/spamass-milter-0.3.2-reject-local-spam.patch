Reject spam from local auth users. Use "-I -H".
Used to prevent spamming from hijacked logins.
Fast dirty hack: using "-H" breaks default -I, -R behaviour.
(c) mahatma, 19.12.2014
--- a/spamass-milter.cpp	2014-12-19 14:49:49.893662941 +0300
+++ b/spamass-milter.cpp	2014-12-19 14:51:45.185376244 +0300
@@ -171,6 +171,7 @@ bool flag_full_email = false;		/* pass f
 bool flag_expand = false;	/* alias/virtusertable expansion */
 bool warnedmacro = false;	/* have we logged that we couldn't fetch a macro? */
 bool ignore_authenticated_senders = false;
+bool hijack_block = true;
 
 // {{{ main()
 
@@ -178,7 +179,7 @@ int
 main(int argc, char* argv[])
 {
    int c, err = 0;
-   const char *args = "fd:mMp:P:r:u:D:i:Ib:B:e:x";
+   const char *args = "fd:mMp:P:r:u:D:i:HIb:B:e:x";
    char *sock = NULL;
    bool dofork = false;
    char *pidfilename = NULL;
@@ -233,6 +234,10 @@ main(int argc, char* argv[])
 				flag_reject = true;
 				reject_score = atoi(optarg);
 				break;
+			case 'H':
+				debug(D_MISC, "Block hijacked logins");
+				hijack_block = true;
+				break;
 			case 'u':
 				flag_sniffuser = true;
 				defaultuser = strdup(optarg);
@@ -431,6 +436,7 @@ assassinate(SMFICTX* ctx, SpamAssassin*
 	bool do_reject = false;
 	if (reject_score == -1 && !assassin->spam_flag().empty())
 		do_reject = true;
+	if (hijack_block) flag_reject = false;
 	if (reject_score != -1)
 	{
 		int score, rv;
@@ -759,11 +765,14 @@ mlfi_envfrom(SMFICTX* ctx, char** envfro
     auth_authen = smfi_getsymval(ctx, "{auth_authen}");
     debug(D_MISC, "auth_authen=%s", auth_authen ?: "<unauthenticated>");
 
+    if (hijack_block) flag_reject = false;
     if (auth_authen)
     {
       debug(D_MISC, "sender authenticated (%s) - accepting message",
           auth_authen);
       debug(D_FUNC, "mlfi_envfrom: exit ignore");
+      if (hijack_block) flag_reject = true;
+      else
       return SMFIS_ACCEPT;
     }
   }
