#!/bin/sh

fs='ext4:-L:zram:-E:discard'

help="

mount.zram v0.3 (c) mahatma, under Anarchy license
Mount helper to mount zram devices via /etc/fstab over most simple way, stupid.
Usage: mount -t zram ...
Loading zram module with number of devices just from FIRST mount device in fstab.
(so, first device is highest number)
Mount options:
	'fs=<fs[{:mkfs_options}]> (default fs=$fs),
	<zram_param>=<value> where <zram_param> is any file from /sys/block/zramX/
	other options pass directly to <fs> mount.
	Also ext4 implies 'data=journal' and any fs trying to mount with 'discard'.
Examples of /etc/fstab:
	/dev/zram3 /tmp zram disksize=8g 0 0
	/dev/zram0 /tmp zram comp_algorithm=lz4,disksize=8g,lazytime,noatime 0 0
	/dev/zram0 /var/tmp/portage zram reset=1,comp_algorithm=lz4,disksize=8g,lazytime,sync,noatime 0 0
todo: check various 'mount' compatibility & more flexible cmdline parsing"

err(){
	echo "ERROR mount.zram $1" >&2
	exit ${2:-1}
}

nn=${1#/dev/zram}
[ "$1" = "$nn" ] && err "$*$help"
modprobe zram num_devices=$((nn+1))
n="${1##*/}"
[ -e "/sys/block/$n/comp_algorithm" ] || err "no /sys/block/$n/comp_algorithm"
o=
for i in ${4//,/ }; do
	v="${i#*=}"
	[ "$v" = "$i" ] || {
		x="${i%%=*}"
		case "$x" in
		fs|mode|uid|gid)eval "$x=\"\$v\"";;&
		fs)continue;;
		esac
		f="/sys/block/$n/$x"
		[ -e "$f" ] && {
			echo "$v" >"$f" || err "echo $v >$f"
			continue
		}
	}
	o+=",$i"
done
[ -b "$1" ] || err " -b $1$help"
o="${o#,}"

fs="${fs//:/ }"
mkfs="${fs#* }"
fs="${fs%% *}"

[ "$(cat "/sys/block/$n/compr_data_size")" = 0 ] && {
	"mkfs.$fs" $mkfs "$1" || err "mkfs -t $fs $mkfs $1"
}

# move original mountpoint permissions to mount if not fs-assisted
[ -z "$mode" ] && m=`stat "$2" --format='%a'`
[ -z "$uid$gid" ] && ug=`stat "$2" --format='%u:%g'` || ug=

for i in discard"${o+,$o}" "$o"; do
	mount -t "$fs" ${i+-o $i} "$1" "$2" && {
		[ -n "$m" ] && chmod -- "$m" "$2"
		[ -n "$ug" ] && chown -- "$ug" "$2"
		exit 0
	}
	r=$?
done
err "mount -t $fs ${o+-o $o} $1 $2" $r
