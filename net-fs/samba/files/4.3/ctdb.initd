#!/sbin/runscript

# taken from old ctdb packages with minimal changes, most old options not checked

depend() {
  need localmount
  need net
  before samba
  after bootmisc
}

start() {
  ebegin "Starting ctdb"
  checkpath -d /var/run/ctdb
  
  [ -z "$CTDB_RECOVERY_LOCK" ] && {
    eerror "To avoid split-brain - configure the location of the CTDB_RECOVERY_LOCK in /etc/conf.d/ctdb"
    eerror "You are warned!"
  }

  [ -z "$CTDB_PUBLIC_ADDRESSES" ] && {
    eerror "You must configure the location of the CTDB_PUBLIC_ADDRESSES in /etc/conf.d/ctdb"
    return 1
  }

  [ -z "$CTDB_PUBLIC_INTERFACE" ] && {
    eerror "You must configure the location of the CTDB_PUBLIC_INTERFACE in /etc/conf.d/ctdb"
    return 1
  }

   [ -n "$CTDB_RECOVERY_LOCK" ] && CTDB_OPTIONS+=" --reclock=$CTDB_RECOVERY_LOCK"

   CTDB_OPTIONS+=" --notification-script=/etc/ctdb/notify.sh"

  # build up CTDB_OPTIONS variable from optional parameters
  [ -z "$CTDB_LOGFILE" ]          || CTDB_OPTIONS+=" --logging=file:$CTDB_LOGFILE"
  [ -z "$CTDB_NODES" ]            || CTDB_OPTIONS+=" --nlist=$CTDB_NODES"
  [ -z "$CTDB_SOCKET" ]           || CTDB_OPTIONS+=" --socket=$CTDB_SOCKET"
  [ -z "$CTDB_PUBLIC_ADDRESSES" ] || CTDB_OPTIONS+=" --public-addresses=$CTDB_PUBLIC_ADDRESSES"
  [ -z "$CTDB_PUBLIC_INTERFACE" ] || CTDB_OPTIONS+=" --public-interface=$CTDB_PUBLIC_INTERFACE"
  [ -z "$CTDB_SINGLE_PUBLIC_IP" ] || CTDB_OPTIONS+=" --single-public-ip=$CTDB_SINGLE_PUBLIC_IP"
  [ -z "$CTDB_DBDIR" ]            || CTDB_OPTIONS+=" --dbdir=$CTDB_DBDIR"
  [ -z "$CTDB_DBDIR_PERSISTENT" ] || CTDB_OPTIONS+=" --dbdir-persistent=$CTDB_DBDIR_PERSISTENT"
  [ -z "$CTDB_EVENT_SCRIPT_DIR" ] || CTDB_OPTIONS+=" --event-script-dir $CTDB_EVENT_SCRIPT_DIR"
  [ -z "$CTDB_TRANSPORT" ]        || CTDB_OPTIONS+=" --transport $CTDB_TRANSPORT"
  [ -z "$CTDB_DEBUGLEVEL" ]       || CTDB_OPTIONS+=" -d $CTDB_DEBUGLEVEL"
  [ -z "$CTDB_START_AS_DISABLED" ] || [ "$CTDB_START_AS_DISABLED" != "yes" ] || {
    CTDB_OPTIONS+=" --start-as-disabled"
  }
  [ -z "$CTDB_CAPABILITY_RECMASTER" ] || [ "$CTDB_CAPABILITY_RECMASTER" != "no" ] || {
    CTDB_OPTIONS+=" --no-recmaster"
  }
  [ -z "$CTDB_CAPABILITY_LMASTER" ] || [ "$CTDB_CAPABILITY_LMASTER" != "no" ] || {
    CTDB_OPTIONS+=" --no-lmaster"
  }
  [ -z "$CTDB_LVS_PUBLIC_IP" ] || {
    CTDB_OPTIONS+=" --lvs"
  }
  [ -z "$CTDB_SCRIPT_LOG_LEVEL" ] || {
    CTDB_OPTIONS+=" --script-log-level=$CTDB_SCRIPT_LOG_LEVEL"
  }

  # check all persistent databases that they look ok
  PERSISTENT_DB_DIR="/var/ctdb/persistent"
  [ -z "$CTDB_DBDIR" ] || {
    PERSISTENT_DB_DIR="$CTDB_DBDIR/persistent"
  }
  mkdir -p $PERSISTENT_DB_DIR 2>/dev/null
  for PDBASE in `ls $PERSISTENT_DB_DIR/*.tdb.[0-9] 2>/dev/null`; do
    /usr/bin/tdbdump $PDBASE >/dev/null 2>/dev/null || {
      eerror "Persistent database $PDBASE is corrupted! CTDB will not start."
      return 1
    }
  done

  start-stop-daemon --start --background --exec /usr/sbin/ctdbd -- $CTDB_OPTIONS

  # error codes too random, just OK
  eend 0
}

stop() {
  ebegin "Stopping ctdb"
  ctdb shutdown && for i in 1 1 1 1 5; do
    echo -n .
    ctdb status >/dev/null 2>&1 || break
    sleep $i
  done
  start-stop-daemon --stop --exec /usr/sbin/ctdbd
  eend 0
}
