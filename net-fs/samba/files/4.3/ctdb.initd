#!/sbin/openrc-run

# taken & reworked from old ctdb packages

extra_started_commands="reload"

depend() {
	need localmount
	need net
	before samba
	after bootmisc
}

start() {
	local i v
	ebegin "Starting ctdb"
	checkpath -d /var/run/ctdb
	for i in notification-script reclock socket logging public-addresses dbdir dbdir-persistent event-script-dir transport script-log-level public-interface LOGFILE NODES DEBUGLEVEL LVS_PUBLIC_IP; do
		s=
		v="${i//-/_}"
		case "$i" in
			LOGFILE)i='--logging=file:';;
			LVS_PUBLIC_IP)i=' --lvs --single-public-ip=';;
			reclock)v=RECOVERY_LOCK;;&
			NODES)i=nlist;;&
			DEBUGLEVEL)i=debug;;&
			notification-script)v=NOTIFY_SCRIPT;;&
			*)i="--$i=";;
		esac
		v="CTDB_${v^^}"
		v="${!v}"
		[ -n "$v" ] && CTDB_OPTIONS+=" $i$v"
	done
	[ -z "$CTDB_START_AS_DISABLED" -o "$CTDB_START_AS_DISABLED" != "yes" ] || CTDB_OPTIONS+=" --start-as-disabled"
	[ -z "$CTDB_CAPABILITY_RECMASTER" -o "$CTDB_CAPABILITY_RECMASTER" != "no" ] || CTDB_OPTIONS+=" --no-recmaster"
	[ -z "$CTDB_CAPABILITY_LMASTER" -o "$CTDB_CAPABILITY_LMASTER" != "no" ] || CTDB_OPTIONS+=" --no-lmaster"

	# check
	i=
	[[ "$CTDB_OPTIONS" == *--public-addresses* || "$CTDB_OPTIONS" == *--single-public-ip* ]] || i+=" the location of the CTDB_PUBLIC_ADDRESSES or CTDB_LVS_PUBLIC_IP in /etc/conf.d/ctdb;"
	[[ "$CTDB_OPTIONS" == *--public-interface* ]] || i+" the location of the CTDB_PUBLIC_INTERFACE in /etc/conf.d/ctdb;"
	[[ "$CTDB_OPTIONS" == *--reclock* ]] || eerror "To avoid split-brain - configure the location of the CTDB_RECOVERY_LOCK in /etc/conf.d/ctdb
You are warned!"
	[ -n "$i" ] && {
		eend 1 "You must configure$i"
		return 1
	}

	# check all persistent databases that they look ok
	PERSISTENT_DB_DIR="/var/ctdb/persistent"
	[ -n "$CTDB_DBDIR" ] && PERSISTENT_DB_DIR="$CTDB_DBDIR/persistent"
	mkdir -p $PERSISTENT_DB_DIR 2>/dev/null
	for PDBASE in `ls $PERSISTENT_DB_DIR/*.tdb.[0-9] 2>/dev/null`; do
		/usr/bin/tdbdump $PDBASE >/dev/null 2>/dev/null || {
			eend 1 "Persistent database $PDBASE is corrupted! CTDB will not start."
			return 1
		}
	done

	start-stop-daemon --start --background --exec /usr/sbin/ctdbd -- $CTDB_OPTIONS

	# error codes too random, just OK
	eend 0
}

stop() {
	ebegin "Stopping ctdb"
	ctdb shutdown && for i in 1 1 1 1 5; do
		echo -n .
		ctdb status >/dev/null 2>&1 || break
		sleep $i
	done
	start-stop-daemon --stop --exec /usr/sbin/ctdbd
	eend 0
}

reload(){
	for i in reloadnodes reloadips sync; do
		ebegin "ctdb $i"
		local e=1
		# on recovery not accessible. workaround
		for t in 1 2 3 4 5; do
			ctdb $i && e=0 break
			e=$?
			sleep 1
		done
		eend $e
	done
}
