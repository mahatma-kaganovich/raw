#!/usr/bin/perl
# (c) Denis Kaganovich, Anarchy or GPLv2
# OpenBox3 pipe menu v0.2
# ob3menu {--<command> {params}}
# 	--slow {<path/to/rc.xml>}
#	--autostart {profile}
#	--include {menu to include}
#	--profile {profile}
# "--slow" - +keybinds, 3.5.0+ menu icons, better with cache.

my (%ico,%key,%cat,%cat,%cc,%dir,@prof,$prof);

for(@ARGV){
	if($_=~s/^--//){
		undef $P{$i=$_};
	}else{
		push(@{$P{$i}},$_);
	}
}

for($ENV{LANG}=~/([a-zA-Z0-9]+)?(_\w+)?(\.[\w-]+)?(\@\w+)?/){
	$lang.='(?:'.quotemeta($_).')?' if(defined($_));
}
$lang='(?:\['.$lang.'\])?' if($lang);

@path=split(/:/,$ENV{PATH});

if(exists($P{profile})){
	$prof=join('|',@{$P{profile}});
}elsif($prof=$ENV{YA_PROFILE}){
	$prof=~s/[, ]+/|/g;
}

sub eXist{
	if(index($_[0],'/')>=0){
		stat($_[0]);
		return(-x _ && -f _);
	}
	for(@path){
		stat("$_/$_[0]");
		return 1 if(-x _ && -f _);
	}
	0;
}

if(exists($P{slow})){
	for(@{$P{slow}}){
		my $s;
		open($F,"<$_") && read($F,$s,-s $F);
		close($F);
		$P{'slow'}=index($s,'<showIcons>yes</showIcons>')>=0;
		$s=~s/<keybind\s+key=\"(.*?)\".*?>\s*<action name=\"Execute\">.*?<command>(.*?)<\/command>/$key{$2}=$1;''/gse;
	};
	open($F,'find /usr/share/icons|');
	while(<$F>){
		chomp($_);
		next if($_=~/\.svg$/);
		$i=$_;
		~s/.*\///;
		$ico{$_}=$i;
		$ico{$_}=$i if (~s/\....$//);
	}
	close($F);
	while(</usr/share/pixmaps/*.???>){
		chomp($_);
		next if($_=~/\.svg$/);
		$i=$_;
		~s/.*\///;
		$ico{$_}=$i;
		~s/\....$//;
		$ico{$_}=$i;
	}
}

for $f(map{glob $_}('/usr/share/applications/*.desktop','/usr/share/applications/*/*.desktop','/usr/share/ya-layout/Desktop/*.desktop','/usr/share/ya-layout/Desktop/exit/*.desktop','/etc/xdg/autostart/*.desktop','/usr/share/desktop-directories/*.directory')){
	my (%d,%en,$F);
	if(($i)=$f=~/\/([^\/]*)\.directory$/){
		next if(!exists($cc{$i}) && $prof && $i=~/^(?:$prof)-/i);
		open($F,"<$f")||next;
		while(<$F>){push @{$en{$k.$l}},$d{$k}=$v if(($k,$l,$v)=$_=~/^\s*([^#\s=\[\]#]+)($lang)\s*=([^#\n\r]*)/i)}
		close($F);
		unshift @{$en{Name}},$i if($i ne $en{Name}->[0]);
	}else{
		open($F,"<$f")||next;
		while(<$F>){$d{$k}=$v if(($k,$v)=$_=~/^\s*([^#\s=\[\]#]+)$lang\s*=([^#\n\r]*)/i)};
		close($F);
		exists($d{Exec}) || next;
	}
	next if(exists($d{TryExec}) && !eXist($d{TryExec}));
	$d{Exec}="/usr/bin/ya-session --run +$d{Exec}" if($d{Terminal} && lc($d{Terminal}) ne 'false');
	if(!exists($d{Name})){
		for(Comment,Exec){
			if(exists($d{$_})){
				$d{Name}=$d{$_};
				goto N;
			}
		}
		next;
	}
N:
	$i='';
	$d{$_}=~s/\'/\\'/g for(Name,Categories);
	if(exists($P{slow}) && exists($d{Icon})){
		$i=$d{Icon};
		$i=~s/(?:.*\/)?(.*?).svg$/$1.png/;
		$i=$ico{$i} if(exists($ico{$i}));
		$i=" icon=\"$i\"";
	}
	if(substr($f,0,4) eq '/etc'){
		$d{Categories}='Autostart';
		if(exists($P{autostart})){
			my $i;
			if(($i=join('|',@{$P{autostart}})||$prof) && !exists($d{OnlyShowIn}) || grep(/^(?:$i)$/i,split(';',$d{OnlyShowIn}))){
				print STDERR "$d{Exec} &\n";
				$d{Name}="+ $d{Name}";
			}
		}
	}
	if($d{Type} eq 'Application'){
		$d{Exec}=~s/\s+%\w$//;
		$d{Name}.=" 	[$key{$d{Exec}}]" if(exists($key{$d{Exec}}));
		$i="<item label='$d{Name}'$i><action name='Execute'><execute>$d{Exec}</execute></action></item>";
	}elsif($d{Type} eq 'Directory'){
		for(@{$en{Name}}){
			if($d{Name} ne $_){
				$dir{$_}="$d{Name}'$i";
				$cc{$_}+=2000;
			}elsif($i){
				$dir{$_}="$d{Name}'$i";
				$cc{$_}+=1000;
			}
		}
		next;
	}else{next}
	for(split(/;/,$d{Categories})){
		next if($_ eq '' || exists($cat{$i}->{$_}));
		$cat{$i}->{$_}=1;
		$cc{$_}++;
	}
	$cat{$i}=undef if(!exists($cat{$i}));
}
$_=defined($_)?[sort{$cc{$a} <=> $cc{$b}}(keys %{$_})]:['misc'] for(values %cat);
push @{$cat1{pop @{$cat{$_}}}},$_ for(keys %cat);
for(keys %cat){
	for $i (@{delete($cat{$_})}){
		push @{$cat1{$i}},$_ if(exists($cat1{$i}))
	}
}
$i=0;
print '<openbox_pipe_menu>';
for(sort keys %cat1){
	$i++;
	print "<menu id='$i' label='",$dir{$_}||"$_'",'>',(sort @{$cat1{$_}}),'</menu>';
}
for(map{glob $_}(@{$P{include}})){
	if(open(my $F,(-x $_)?"$_|":"<$_")){
		print('<separator />',(<$F>));
		close($F);
	}
}
print '</openbox_pipe_menu>';
