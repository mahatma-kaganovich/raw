#!/usr/bin/perl
# (c) Denis Kaganovich, Anarchy or GPLv2
# OpenBox3 pipe menu
# ob3menu [--slow [<path/to/rc.xml>]]
# "--slow" - +keybinds, 3.5.0+ menu icons, better with cache.

$SLOW=$ARGV[0] eq '--slow';

$lang=$ENV{LANG};
$lang=~s/_.*//;
@path=split(/:/,$ENV{PATH});

sub eXist{
	if(index($_[0],'/')>=0){
		stat($_[0]);
		return(-x _ && -f _);
	}
	for(@path){
		stat("$_/$_[0]");
		return 1 if(-x _ && -f _);
	}
	0;
}

my (%ico,%key,%cat,%cat,%cc);

if($SLOW && defined($ARGV[1])){
	my $s;
	open($F,"<$ARGV[1]") && read($F,$s,-s $F);
	close($F);
	$SLOW=index($s,'<showIcons>yes</showIcons>')>=0;
	$s=~s/<keybind\s+key=\"(.*?)\".*?>\s*<action name=\"Execute\">.*?<command>(.*?)<\/command>/$key{$2}=$1;''/gse;
};

if($SLOW){
	open($F,'find /usr/share/icons|');
	while(<$F>){
		chomp($_);
		next if($_=~/\.svg$/);
		$i=$_;
		~s/.*\///;
		$ico{$_}=$i;
		$ico{$_}=$i if (~s/\....$//);
	}
	close($F);
	while(</usr/share/pixmaps/*.???>){
		chomp($_);
		next if($_=~/\.svg$/);
		$i=$_;
		~s/.*\///;
		$ico{$_}=$i;
		~s/\....$//;
		$ico{$_}=$i;
	}
}

for $f(</usr/share/applications/*.desktop>,</usr/share/applications/*/*.desktop>,</usr/share/ya-layout/Desktop/*.desktop>,</usr/share/ya-layout/Desktop/exit/*.desktop>){
	my %d;
	open(my $F,"<$f")||next;
	while(<$F>){
		chomp($_);
		~s/#.*//g;
		my ($k,$v)=$_=~/^([^\s=\[\]]+)(?:\[$lang\])?\s*=(.*)$/ or next;
		$k=~s/\s+//g;
		$d{$k}=$v;
	}
	close($F);
	next if((exists($d{TryExec}) && !eXist($d{TryExec})) || !exists($d{Exec}));
	if(!exists($d{Name})){
#		print STDERR "Name? $f\n";
		for $i ('Comment','Exec'){
			if(exists($d{$i})){
				$d{Name}=$d{$i};
				goto N;
			}
		}
		next;
	}
N:
	$i='';
	if($SLOW && exists($d{Icon})){
		$i=$d{Icon};
		$i=~s/(?:.*\/)?(.*?).svg$/$1.png/;
		$i=$ico{$i} if(exists($ico{$i}));
		$i=" icon=\"$i\"";
	}
	if($d{Type} eq 'Application'){
		next if(!exists($d{Exec}));
		$d{Exec}=~s/\s+%\w$//;
		$d{Name}.=" 	[$key{$d{Exec}}]" if(exists($key{$d{Exec}}));
		$i="<item label=\"$d{Name}\"$i><action name=\"Execute\"><execute>$d{Exec}</execute></action></item>";
	}else{
#		print STDERR "Type=$d{Type}? $f\n";
		next;
	}
	for(split(/;/,$d{Categories})){
		next if($_ eq '' || exists($cat{$i}->{$_}));
		$cat{$i}->{$_}=1;
		$cc{$_}++;
	}
	$cat{$i}=undef if(!exists($cat{$i}));
}
$_=defined($_)?[sort{$cc{$a} <=> $cc{$b}}(keys %{$_})]:['misc'] for(values %cat);
push @{$cat1{pop @{$cat{$_}}}},$_ for(keys %cat);
for(keys %cat){
	for $i (@{$cat{$_}}){
		push @{$cat1{$i}},$_ if(exists($cat1{$i}))
	}
}
$i=0;
print "<openbox_pipe_menu>";
for(sort keys %cat1){
	$i++;
	print "<menu id=\"$i\" label=\"$_\">".join('',sort @{$cat1{$_}})."</menu>";
}
print "</openbox_pipe_menu>";
