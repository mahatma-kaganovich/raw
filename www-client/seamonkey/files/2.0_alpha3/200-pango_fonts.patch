--- a/mozilla/gfx/thebes/src/gfxPangoFonts.cpp	2009-05-18 12:23:02.000000000 +0000
+++ b/mozilla/gfx/thebes/src/gfxPangoFonts.cpp	2009-04-24 01:46:41.000000000 +0000
@@ -208,7 +208,7 @@
 {
     int fontWeight = -1;
     FcPatternGetInteger(aPattern, FC_WEIGHT, 0, &fontWeight);
-    int cssWeight = gfxFontconfigUtils::FcWeightForBaseWeight(mWeight);
+    int cssWeight = gfxFontconfigUtils::FcWeightForBaseWeight(mWeight / 100);
     if (cssWeight != fontWeight) {
         FcPatternDel(aPattern, FC_WEIGHT);
         FcPatternAddInteger(aPattern, FC_WEIGHT, cssWeight);
@@ -1329,8 +1329,15 @@
 
     FcFontSet *sets[1] = { fontSet };
     FcResult result;
+#ifdef SOLARIS
+    // Get around a crash of FcFontSetSort when FcConfig is NULL
+    // Solaris's FcFontSetSort needs an FcConfig (bug 474758)
+    fontSet.own(FcFontSetSort(FcConfigGetCurrent(), sets, 1, mSortPattern,
+                              FcFalse, NULL, &result));
+#else
     fontSet.own(FcFontSetSort(NULL, sets, 1, mSortPattern,
                               FcFalse, NULL, &result));
+#endif
 
     if (truncateMarker != NULL && fontSet) {
         nsAutoRef<FcFontSet> truncatedSet(FcFontSetCreate());
@@ -1789,23 +1796,17 @@
 }
 
 static void
-gfx_pango_font_map_context_substitute(PangoFcFontMap *fontmap,
-                                      PangoContext *context,
+gfx_pango_font_map_default_substitute(PangoFcFontMap *fontmap,
                                       FcPattern *pattern)
 {
-    // owned by the context
-    PangoFontDescription *desc = pango_context_get_font_description(context);
-    double size = pango_font_description_get_size(desc) / FLOAT_PANGO_SCALE;
-    gfxPangoFontGroup *fontGroup = GetFontGroup(context);
-    PRBool usePrinterFont = fontGroup && fontGroup->GetStyle()->printerFont;
-    PrepareSortPattern(pattern, size, 1.0, usePrinterFont);
+    // The context is not available here but most of our rendering is for the
+    // screen so aIsPrinterFont is set to FALSE.
+    PrepareSortPattern(pattern, 18.0, 1.0, FALSE);
 }
 
 static PangoFcFont *
-gfx_pango_font_map_create_font(PangoFcFontMap *fontmap,
-                               PangoContext *context,
-                               const PangoFontDescription *desc,
-                               FcPattern *pattern)
+gfx_pango_font_map_new_font(PangoFcFontMap *fontmap,
+                            FcPattern *pattern)
 {
     return PANGO_FC_FONT(g_object_new(GFX_TYPE_PANGO_FC_FONT,
                                       "pattern", pattern, NULL));
@@ -1828,10 +1829,14 @@
     // context_key_* virtual functions are only necessary if we want to
     // dynamically respond to changes in the screen cairo_font_options_t.
 
-    // context_substitute and get_font are not likely to be used but
-    //   implemented because the class makes them available.
-    fcfontmap_class->context_substitute = gfx_pango_font_map_context_substitute;
-    fcfontmap_class->create_font = gfx_pango_font_map_create_font;
+    // The APIs for context_substitute/fontset_key_substitute and create_font
+    //   changed between Pango 1.22 and 1.24 so default_substitute and
+    //   new_font are provided instead.
+    // default_substitute and new_font are not likely to be used but
+    //   implemented because the class makes them available and an
+    //   implementation should provide either create_font or new_font.
+    fcfontmap_class->default_substitute = gfx_pango_font_map_default_substitute;
+    fcfontmap_class->new_font = gfx_pango_font_map_new_font;
 }
 
 /**
